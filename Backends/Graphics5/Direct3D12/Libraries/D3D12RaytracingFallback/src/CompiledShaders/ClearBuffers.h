#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer TreeletConstants
; {
;
;   struct TreeletConstants
;   {
;
;       struct struct.InputConstants
;       {
;
;           uint NumberOfElements;                    ; Offset:    0
;           uint MinTrianglesPerTreelet;              ; Offset:    4
;       
;       } Constants                                   ; Offset:    0
;
;   
;   } TreeletConstants                                ; Offset:    0 Size:     8
;
; }
;
; Resource bind info for BaseTreeletsIndexBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; TreeletConstants                  cbuffer      NA          NA     CB0            cb0     1
; NumTrianglesBuffer                    UAV    byte         r/w      U0             u1     1
; BaseTreeletsCountBuffer               UAV    byte         r/w      U1             u4     1
; BaseTreeletsIndexBuffer               UAV  struct         r/w      U2             u5     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RWByteAddressBuffer = type { i32 }
%"class.RWStructuredBuffer<unsigned int>" = type { i32 }
%TreeletConstants = type { %struct.InputConstants }
%struct.InputConstants = type { i32, i32 }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.RWStructuredBuffer<Primitive>" = type { %struct.Primitive }
%struct.Primitive = type { i32, <4 x i32>, <4 x i32>, i32 }
%"class.RWStructuredBuffer<HierarchyNode>" = type { %struct.HierarchyNode }
%struct.HierarchyNode = type { i32, i32, i32 }
%"class.RWStructuredBuffer<AABB>" = type { %struct.AABB }
%struct.AABB = type { <3 x float>, <3 x float> }

@"\01?NumTrianglesBuffer@@3URWByteAddressBuffer@@A" = external constant %struct.RWByteAddressBuffer, align 4
@"\01?BaseTreeletsCountBuffer@@3URWByteAddressBuffer@@A" = external constant %struct.RWByteAddressBuffer, align 4
@"\01?BaseTreeletsIndexBuffer@@3V?$RWStructuredBuffer@I@@A" = external constant %"class.RWStructuredBuffer<unsigned int>", align 4
@TreeletConstants = external constant %TreeletConstants

define void @main() {
  %BaseTreeletsIndexBuffer_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 2, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %BaseTreeletsCountBuffer_UAV_rawbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %NumTrianglesBuffer_UAV_rawbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %TreeletConstants_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %2 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %TreeletConstants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %3 = extractvalue %dx.types.CBufRet.i32 %2, 0
  %4 = add i32 %3, -1
  %5 = add i32 %4, %3
  %6 = udiv i32 %3, 7
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %BaseTreeletsCountBuffer_UAV_rawbuf, i32 0, i32 undef, i32 0, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  br label %9

; <label>:9                                       ; preds = %8, %0
  %10 = icmp ult i32 %1, %6
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %9
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %BaseTreeletsIndexBuffer_UAV_structbuf, i32 %1, i32 0, i32 %5, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = icmp ult i32 %1, %4
  br i1 %13, label %14, label %16

; <label>:14                                      ; preds = %12
  %15 = shl i32 %1, 2
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %NumTrianglesBuffer_UAV_rawbuf, i32 %15, i32 undef, i32 0, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  br label %16

; <label>:16                                      ; preds = %14, %12
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

; Function Attrs: nounwind
declare void @dx.op.bufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!12, !38}
!dx.entryPoints = !{!42}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 3}
!3 = !{!"cs", i32 6, i32 0}
!4 = !{null, !5, !10, null}
!5 = !{!6, !7, !8}
!6 = !{i32 0, %struct.RWByteAddressBuffer* undef, !"NumTrianglesBuffer", i32 0, i32 1, i32 1, i32 11, i1 true, i1 false, i1 false, null}
!7 = !{i32 1, %struct.RWByteAddressBuffer* undef, !"BaseTreeletsCountBuffer", i32 0, i32 4, i32 1, i32 11, i1 true, i1 false, i1 false, null}
!8 = !{i32 2, %"class.RWStructuredBuffer<unsigned int>"* undef, !"BaseTreeletsIndexBuffer", i32 0, i32 5, i32 1, i32 12, i1 false, i1 false, i1 false, !9}
!9 = !{i32 1, i32 4}
!10 = !{!11}
!11 = !{i32 0, %TreeletConstants* undef, !"TreeletConstants", i32 0, i32 0, i32 1, i32 8, null}
!12 = !{i32 0, %"class.RWStructuredBuffer<Primitive>" undef, !13, %struct.Primitive undef, !15, %struct.RWByteAddressBuffer undef, !20, %"class.RWStructuredBuffer<HierarchyNode>" undef, !22, %struct.HierarchyNode undef, !23, %"class.RWStructuredBuffer<AABB>" undef, !27, %struct.AABB undef, !28, %"class.RWStructuredBuffer<unsigned int>" undef, !31, %struct.InputConstants undef, !33, %TreeletConstants undef, !36}
!13 = !{i32 52, !14}
!14 = !{i32 6, !"h", i32 3, i32 0}
!15 = !{i32 52, !16, !17, !18, !19}
!16 = !{i32 6, !"PrimitiveType", i32 3, i32 0, i32 7, i32 5}
!17 = !{i32 6, !"data0", i32 3, i32 16, i32 7, i32 5}
!18 = !{i32 6, !"data1", i32 3, i32 32, i32 7, i32 5}
!19 = !{i32 6, !"data2", i32 3, i32 48, i32 7, i32 5}
!20 = !{i32 4, !21}
!21 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!22 = !{i32 12, !14}
!23 = !{i32 12, !24, !25, !26}
!24 = !{i32 6, !"ParentIndex", i32 3, i32 0, i32 7, i32 5}
!25 = !{i32 6, !"LeftChildIndex", i32 3, i32 4, i32 7, i32 5}
!26 = !{i32 6, !"RightChildIndex", i32 3, i32 8, i32 7, i32 5}
!27 = !{i32 28, !14}
!28 = !{i32 28, !29, !30}
!29 = !{i32 6, !"min", i32 3, i32 0, i32 7, i32 9}
!30 = !{i32 6, !"max", i32 3, i32 16, i32 7, i32 9}
!31 = !{i32 4, !32}
!32 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 5}
!33 = !{i32 8, !34, !35}
!34 = !{i32 6, !"NumberOfElements", i32 3, i32 0, i32 7, i32 5}
!35 = !{i32 6, !"MinTrianglesPerTreelet", i32 3, i32 4, i32 7, i32 5}
!36 = !{i32 8, !37}
!37 = !{i32 6, !"Constants", i32 3, i32 0}
!38 = !{i32 1, void ()* @main, !39}
!39 = !{!40}
!40 = !{i32 0, !41, !41}
!41 = !{}
!42 = !{void ()* @main, !"main", null, !4, !43}
!43 = !{i32 0, i64 16, i32 4, !44}
!44 = !{i32 64, i32 1, i32 1}

#endif

const unsigned char g_pClearBuffers[] = {
  0x44, 0x58, 0x42, 0x43, 0xbb, 0xb4, 0xaa, 0x54, 0x1f, 0xe1, 0xfd, 0x9f,
  0xda, 0x34, 0x52, 0xe5, 0xdb, 0x55, 0xa8, 0x6b, 0x01, 0x00, 0x00, 0x00,
  0x7c, 0x0b, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0xe8, 0x00, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x7c, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x8c, 0x0a, 0x00, 0x00,
  0x60, 0x00, 0x05, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x74, 0x0a, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x90, 0xc1, 0x1c, 0x01, 0x18, 0x9c, 0x26,
  0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x0a, 0x6f, 0xd8, 0x44, 0x68, 0xc3, 0x10,
  0x11, 0x92, 0xb4, 0x51, 0x45, 0x41, 0x44, 0x28, 0x00, 0x28, 0x98, 0xc9,
  0x0c, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x64, 0xe1,
  0x16, 0x66, 0x81, 0x1e, 0xe4, 0xa1, 0x1e, 0xc6, 0x81, 0x1e, 0xea, 0x41,
  0x1e, 0xca, 0x81, 0x1c, 0x44, 0xa1, 0x1e, 0xcc, 0xc1, 0x1c, 0xca, 0x41,
  0x1e, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e, 0xd2, 0xe1, 0x1c, 0xdc, 0xa1,
  0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d, 0xe8, 0xc1, 0x0f, 0x50, 0x00,
  0xd0, 0x70, 0x95, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x62, 0xf3, 0x50, 0x13,
  0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93, 0x84, 0x04, 0x00, 0x38, 0xa8, 0x8d,
  0x08, 0x62, 0x21, 0x26, 0xce, 0x69, 0xa4, 0x09, 0x68, 0x26, 0x09, 0x05,
  0x05, 0x19, 0x23, 0x00, 0x25, 0x40, 0x28, 0x29, 0x03, 0x00, 0x00, 0xb4,
  0x1c, 0x35, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac,
  0xc4, 0xe4, 0x23, 0xb7, 0x8d, 0x08, 0x00, 0x00, 0x80, 0x39, 0x02, 0x84,
  0x9c, 0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x10, 0x68, 0x86,
  0x85, 0x40, 0xc1, 0x53, 0x88, 0x06, 0x80, 0x00, 0x8a, 0xe6, 0x08, 0x82,
  0x62, 0x40, 0x80, 0x03, 0x00, 0x13, 0x51, 0x45, 0x41, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x1c, 0xb2, 0x06, 0x02, 0x86, 0x11, 0x08, 0xe0, 0x20,
  0x69, 0x8a, 0x28, 0x61, 0xf2, 0xd3, 0x08, 0x61, 0x90, 0x09, 0xa9, 0x08,
  0x44, 0x00, 0x59, 0x06, 0xcc, 0x34, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30,
  0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70, 0x0b, 0xb3, 0x40, 0x0f, 0xf2, 0x50,
  0x0f, 0xe3, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x40, 0x0e, 0xa2, 0x50,
  0x0f, 0xe6, 0x60, 0x0e, 0xe5, 0x20, 0x0f, 0x7c, 0x00, 0x0b, 0xf2, 0x90,
  0x0e, 0xed, 0x90, 0x0e, 0xf4, 0x90, 0x0e, 0xf6, 0x50, 0x0e, 0x7e, 0x80,
  0x02, 0xed, 0x28, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0x43, 0x84, 0x88, 0x80,
  0x48, 0x38, 0xb0, 0xd3, 0x19, 0x08, 0x34, 0x00, 0x00, 0x30, 0xd3, 0x19,
  0x8c, 0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xc8, 0xc2, 0x2d,
  0xcc, 0x02, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xd4, 0x83, 0x3c,
  0x94, 0x03, 0x39, 0x88, 0x42, 0x3d, 0x98, 0x83, 0x39, 0x94, 0x83, 0x3c,
  0xf0, 0x01, 0x2a, 0xa4, 0x43, 0x39, 0xc8, 0x43, 0x38, 0xc8, 0xc3, 0x38,
  0xa0, 0x43, 0x3e, 0xb8, 0xc2, 0x3b, 0x90, 0x43, 0x39, 0xf8, 0x01, 0x0a,
  0xb8, 0x19, 0x80, 0x61, 0x84, 0xc1, 0xbb, 0x45, 0x9a, 0x22, 0x4a, 0x98,
  0x7c, 0x4d, 0xdb, 0x36, 0x24, 0x7c, 0xdf, 0x4c, 0xde, 0x38, 0xb0, 0x43,
  0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x81, 0x2c, 0xdc, 0xc2, 0x2c, 0xd0, 0x83,
  0x3c, 0xd4, 0xc3, 0x38, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0x90, 0x83,
  0x28, 0xd4, 0x83, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x03, 0x1f, 0x84, 0x42,
  0x28, 0x88, 0x82, 0x28, 0xf8, 0x01, 0x0a, 0xc0, 0x39, 0x02, 0x50, 0x98,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0x64, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x66, 0x00, 0xc0, 0xcc, 0x00,
  0x80, 0xb9, 0x01, 0x00, 0xd3, 0x03, 0x00, 0x18, 0xf2, 0x24, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x59, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x13,
  0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x87, 0x02, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x8f, 0x05, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x59, 0x20, 0x00, 0x18, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0x60, 0x04, 0xa0, 0x0c, 0x8a, 0xa1, 0x2c, 0x0a, 0xa1, 0x08, 0x4a,
  0xa1, 0x30, 0x0a, 0xa2, 0xd0, 0xca, 0xa1, 0x40, 0x0a, 0xa8, 0xc0, 0x0a,
  0xa7, 0x24, 0x0a, 0x30, 0x80, 0xc4, 0x02, 0xa1, 0x69, 0x04, 0xa0, 0x06,
  0x88, 0x98, 0x01, 0xa0, 0x62, 0x06, 0x80, 0x8c, 0x19, 0x00, 0x3a, 0x66,
  0x00, 0x68, 0x98, 0x01, 0x20, 0x61, 0x06, 0x80, 0xb4, 0x19, 0x00, 0xda,
  0x66, 0x00, 0x88, 0x9b, 0x01, 0xa0, 0x6e, 0x06, 0x80, 0xc0, 0x19, 0x00,
  0x0a, 0x67, 0x00, 0x28, 0x98, 0x01, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0xc9, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10,
  0x80, 0x64, 0x82, 0x00, 0x28, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x00, 0xcb,
  0x06, 0x61, 0x30, 0x28, 0x8c, 0xcd, 0x4d, 0x10, 0x00, 0x66, 0xc3, 0x80,
  0x24, 0xc4, 0x04, 0x41, 0x18, 0x03, 0x4a, 0x4e, 0x75, 0x6d, 0x54, 0x72,
  0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x13, 0x04, 0xa0, 0x99, 0x20, 0x4c, 0xdd, 0x04, 0x61, 0xe2, 0x36,
  0x2c, 0xc4, 0xc2, 0x10, 0xc3, 0xd0, 0x38, 0xcf, 0x03, 0xf0, 0x12, 0x0a,
  0x9b, 0x2b, 0xa3, 0x92, 0x2b, 0x2b, 0x63, 0x2b, 0xa3, 0x9b, 0x1b, 0x7a,
  0xab, 0x73, 0xa3, 0x13, 0xaa, 0x33, 0x33, 0x2b, 0x93, 0x9b, 0x20, 0x00,
  0xce, 0x86, 0x65, 0x58, 0x22, 0x42, 0x1a, 0x1a, 0xe7, 0x79, 0x80, 0x09,
  0x02, 0xf0, 0x4c, 0x10, 0x08, 0x8f, 0x97, 0x50, 0xd8, 0x5c, 0x19, 0x95,
  0x5c, 0x59, 0x19, 0x5b, 0x19, 0xdd, 0x5c, 0x92, 0x1b, 0x59, 0x19, 0x9e,
  0x50, 0x9d, 0x99, 0x59, 0x99, 0xdc, 0x04, 0x01, 0x80, 0x26, 0x08, 0x40,
  0xb4, 0x41, 0x18, 0xa4, 0x0d, 0x0b, 0x55, 0x59, 0xc4, 0x35, 0x60, 0xcf,
  0xf3, 0x64, 0x1b, 0x06, 0x68, 0xd2, 0x26, 0x08, 0x47, 0x18, 0x10, 0xa2,
  0x92, 0x2b, 0x2b, 0x63, 0x2b, 0xa3, 0x1b, 0x7a, 0x73, 0x9b, 0xa3, 0x0b,
  0x73, 0xa3, 0x9b, 0x9b, 0x20, 0x00, 0xd2, 0x06, 0x84, 0xe0, 0x3a, 0x82,
  0x18, 0x3c, 0x60, 0x43, 0xf0, 0x6d, 0x20, 0x80, 0x0d, 0x0c, 0x80, 0x09,
  0xc2, 0x56, 0x06, 0x13, 0x04, 0x60, 0x62, 0x80, 0xb6, 0x81, 0x48, 0xc8,
  0xc0, 0x20, 0x36, 0x08, 0x63, 0x50, 0x06, 0x13, 0x04, 0x8d, 0x0c, 0xd8,
  0x40, 0xc9, 0xa5, 0xb5, 0xa5, 0xd1, 0xa5, 0xd9, 0x95, 0x51, 0xe5, 0xc1,
  0x95, 0x4d, 0x10, 0x00, 0x6a, 0x83, 0x91, 0xa0, 0x81, 0x41, 0xa4, 0xc1,
  0xc5, 0x82, 0x2c, 0x8c, 0x2e, 0x0c, 0x66, 0x82, 0x00, 0x54, 0x1b, 0x8c,
  0x64, 0x0d, 0x0c, 0x36, 0x48, 0x83, 0x8b, 0x05, 0x59, 0x18, 0x5d, 0x58,
  0xcc, 0x04, 0x01, 0xb0, 0x36, 0x18, 0x89, 0x1b, 0x18, 0x6f, 0x90, 0x06,
  0x17, 0x0b, 0xb2, 0x30, 0xba, 0x30, 0x99, 0x09, 0x02, 0x70, 0x6d, 0x30,
  0x92, 0x38, 0x30, 0xe4, 0x20, 0x0d, 0xae, 0x0d, 0xc5, 0x18, 0xa8, 0x41,
  0x1b, 0xc0, 0xc1, 0x1c, 0x4c, 0x10, 0x02, 0x35, 0xd8, 0x60, 0x24, 0x64,
  0x60, 0x10, 0x69, 0x20, 0x6d, 0x10, 0x24, 0x3b, 0x98, 0x20, 0x74, 0x67,
  0xb0, 0x41, 0xc0, 0xca, 0x60, 0x82, 0xc0, 0x99, 0x01, 0x17, 0xa8, 0x30,
  0xb9, 0x32, 0x37, 0xba, 0x24, 0x37, 0xb2, 0x32, 0xbc, 0x0d, 0x46, 0xb2,
  0x07, 0x06, 0x91, 0x06, 0x17, 0x1d, 0xa6, 0x32, 0x33, 0xba, 0x21, 0xb4,
  0x34, 0x36, 0xb2, 0x24, 0x37, 0xb2, 0x32, 0xbc, 0x0d, 0x46, 0xd2, 0x07,
  0x86, 0x94, 0x06, 0x17, 0x1f, 0xa9, 0xb4, 0x33, 0x34, 0xba, 0x21, 0xb4,
  0x34, 0x36, 0xb2, 0x24, 0x37, 0xb2, 0x32, 0xbc, 0x0d, 0x46, 0xf2, 0x07,
  0x86, 0x97, 0x06, 0xd7, 0x06, 0x02, 0xe3, 0x03, 0x3f, 0x00, 0x85, 0x09,
  0x42, 0x18, 0xa4, 0xc1, 0x04, 0x01, 0xc0, 0x36, 0x08, 0xa3, 0x50, 0x06,
  0x13, 0x04, 0x30, 0x40, 0x03, 0x0e, 0x6d, 0x69, 0x6e, 0x13, 0x04, 0x20,
  0xdb, 0x60, 0x24, 0xa6, 0x60, 0x10, 0x69, 0x70, 0x0a, 0x1c, 0xda, 0xc2,
  0xf0, 0x36, 0x18, 0x49, 0x2a, 0x18, 0x6c, 0x90, 0x06, 0xa7, 0xb0, 0x61,
  0x18, 0x05, 0x54, 0x50, 0x85, 0x09, 0xc2, 0x20, 0x06, 0x1b, 0x8c, 0x84,
  0x0c, 0x0c, 0x22, 0x0d, 0xae, 0x0d, 0x82, 0xd4, 0x0a, 0x13, 0x84, 0xe2,
  0x23, 0xe4, 0x54, 0xd7, 0x26, 0x56, 0x26, 0xf7, 0x64, 0x56, 0xc4, 0x56,
  0xd6, 0x56, 0xe6, 0x46, 0x37, 0xb7, 0xc1, 0x48, 0x60, 0xc1, 0x20, 0xd2,
  0xe0, 0xa2, 0xd5, 0x94, 0xe6, 0x46, 0x25, 0x97, 0x16, 0xe6, 0x76, 0xc6,
  0x56, 0x36, 0x07, 0x55, 0x26, 0x47, 0x25, 0x57, 0x56, 0xc6, 0x56, 0x46,
  0xb7, 0xc1, 0x48, 0x64, 0xc1, 0x90, 0xd2, 0xe0, 0xda, 0x30, 0x78, 0xb1,
  0x30, 0x0b, 0x13, 0x04, 0x03, 0x0c, 0x98, 0x0c, 0xbd, 0xb9, 0xcd, 0xd1,
  0x85, 0xb9, 0xd1, 0xcd, 0x6d, 0x20, 0x12, 0x5b, 0x30, 0x88, 0x0d, 0x82,
  0x77, 0x0b, 0x1b, 0x2a, 0x42, 0x0c, 0xcc, 0xe0, 0x0c, 0xe8, 0xa0, 0x0e,
  0xee, 0x00, 0x0f, 0xf2, 0x40, 0x0f, 0x42, 0x41, 0x14, 0x48, 0xa1, 0x14,
  0x56, 0x81, 0x15, 0x5c, 0xe1, 0x15, 0x68, 0xa1, 0x16, 0x70, 0x61, 0x82,
  0xa0, 0x10, 0x1b, 0x80, 0x0d, 0x03, 0xb1, 0x0b, 0xbb, 0xb0, 0x21, 0xe0,
  0x85, 0x0d, 0xc3, 0xa0, 0x0b, 0xbd, 0x40, 0xa2, 0x2d, 0x2c, 0xcd, 0x6d,
  0x82, 0x20, 0x06, 0xdb, 0x04, 0x01, 0xd0, 0x36, 0x0c, 0xe1, 0x30, 0x0c,
  0x1b, 0x08, 0x02, 0x1c, 0x24, 0x71, 0xd8, 0x50, 0xe8, 0xc2, 0x2f, 0x00,
  0x61, 0x30, 0x0e, 0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8, 0xca,
  0xdc, 0xe8, 0xa6, 0x04, 0x41, 0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32, 0xb9,
  0xb9, 0xb4, 0x37, 0xb7, 0x29, 0x01, 0xd1, 0x84, 0x0c, 0xcf, 0xc5, 0x2e,
  0x8c, 0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x60, 0xd4, 0x21, 0xc3, 0x73, 0x99,
  0x43, 0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b, 0x12,
  0x24, 0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6,
  0xca, 0xe6, 0xa6, 0x04, 0x60, 0x50, 0x89, 0x0c, 0xcf, 0x85, 0x2e, 0x0f,
  0xae, 0x2c, 0xc8, 0xcd, 0xed, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d,
  0x6e, 0x8a, 0x80, 0x0b, 0xbd, 0x50, 0x87, 0x0c, 0xcf, 0xa5, 0xcc, 0x8d,
  0x4e, 0x2e, 0x0f, 0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a, 0x30, 0x0e,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72,
  0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70,
  0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72,
  0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,
  0x66, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x23, 0xb7, 0x6d, 0x03,
  0x50, 0x1b, 0x11, 0xc4, 0x42, 0x4c, 0x9c, 0xd3, 0x48, 0x13, 0xd0, 0x4c,
  0x92, 0x1d, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11,
  0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x05, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f,
  0x47, 0x44, 0x00, 0x83, 0x38, 0xf8, 0xc8, 0x6d, 0x97, 0x80, 0x1d, 0x04,
  0x7e, 0xc2, 0xf0, 0xbc, 0x4c, 0x95, 0x97, 0xcb, 0xec, 0x32, 0x7d, 0x9e,
  0x74, 0x93, 0xcb, 0x78, 0x61, 0xdd, 0x6c, 0x2e, 0xcb, 0x81, 0xc0, 0x99,
  0xf5, 0x47, 0x92, 0x5e, 0xa7, 0x74, 0x79, 0x7d, 0x4c, 0xaf, 0xcb, 0xcb,
  0x64, 0x61, 0xdd, 0x6c, 0x2e, 0xcb, 0x81, 0x49, 0x20, 0x30, 0x68, 0x04,
  0x04, 0x03, 0x20, 0x4d, 0x05, 0xcc, 0x41, 0xe0, 0x27, 0x0c, 0xcf, 0xcb,
  0x54, 0x79, 0xb9, 0xcc, 0x2e, 0xd3, 0xe7, 0xc3, 0x77, 0xdd, 0x4d, 0x17,
  0xd6, 0xcd, 0xe6, 0xb2, 0x1c, 0x08, 0x9c, 0x55, 0xa5, 0x57, 0x61, 0x9e,
  0x5e, 0x0e, 0x92, 0xc9, 0xf2, 0xf2, 0x7c, 0x2e, 0xac, 0x9b, 0xcd, 0x65,
  0x39, 0x10, 0x18, 0x2c, 0x00, 0x37, 0x08, 0xfc, 0x9c, 0xf5, 0x36, 0x55,
  0x9e, 0x0e, 0xbb, 0xcf, 0xec, 0xf2, 0x5c, 0x58, 0x37, 0x9b, 0xcb, 0x72,
  0x20, 0x70, 0x56, 0x95, 0x5e, 0x85, 0x79, 0x7a, 0x39, 0x48, 0x26, 0xcb,
  0xcb, 0xf3, 0xb9, 0xb0, 0x6e, 0x36, 0x97, 0xe5, 0x40, 0x60, 0xd0, 0x10,
  0xaa, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0xa8, 0xa2, 0x20, 0x22, 0x76, 0x72,
  0x22, 0xc2, 0x47, 0x6e, 0x1b, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x13, 0x04, 0x47, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x04, 0xcc, 0x00, 0x94, 0x5c, 0x29, 0x06, 0x94,
  0x6e, 0x40, 0xd9, 0xd5, 0x00, 0x39, 0x25, 0x50, 0x04, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40, 0xb1, 0xc1, 0x21, 0x90, 0xc1,
  0x18, 0x5c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40, 0xb5, 0x01, 0x32,
  0xac, 0x81, 0x19, 0x60, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40, 0xb9,
  0x41, 0x42, 0xac, 0x01, 0x1b, 0x64, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x40, 0xbd, 0x81, 0x42, 0xb0, 0x01, 0x1b, 0x68, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0xb0, 0xc8, 0x41, 0xd2, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x10, 0xc9, 0x41, 0x22, 0xb8, 0xc1, 0x68, 0x42, 0x00, 0x54, 0xa0,
  0x40, 0x05, 0x02, 0xd4, 0x80, 0x06, 0x33, 0xdc, 0x60, 0xcc, 0x01, 0x18,
  0xcc, 0x32, 0x04, 0x42, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x96,
  0x1d, 0x44, 0x0a, 0x1d, 0x4c, 0x74, 0x30, 0x4d, 0x53, 0x33, 0x4b, 0x20,
  0x0c, 0x37, 0x1c, 0x02, 0x19, 0xcc, 0x32, 0x0c, 0x44, 0x30, 0x62, 0xd0,
  0x00, 0x20, 0x08, 0x06, 0xd6, 0x1d, 0x48, 0x0c, 0x52, 0x07, 0x04, 0x45,
  0x51, 0xce, 0x2c, 0x01, 0x31, 0xdc, 0x80, 0x14, 0x64, 0x30, 0xcb, 0x50,
  0x18, 0x41, 0x25, 0x71, 0x70, 0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0x60,
  0xe5, 0x01, 0xc5, 0x04, 0xd6, 0x1d, 0x58, 0x96, 0x05, 0xcd, 0x12, 0x18,
  0x18, 0x0e, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x36, 0x53, 0x06, 0x1b,
  0x20, 0x11, 0x6d, 0x44, 0x10, 0x0b, 0x31, 0x49, 0x62, 0x33, 0x10, 0xd7,
  0x46, 0x15, 0x05, 0x11, 0xfd, 0xae, 0xf6, 0xfe, 0xd2, 0x14, 0x51, 0xc2,
  0x14, 0x50, 0x85, 0xd5, 0x74, 0x27, 0xc5, 0xb4, 0x11, 0x02, 0x34, 0xc6,
  0x42, 0x48, 0x1b, 0x55, 0x14, 0x44, 0xf4, 0xbb, 0xda, 0xfb, 0x47, 0x80,
  0x15, 0x50, 0x85, 0xd1, 0x88, 0xc1, 0x06, 0x48, 0x44, 0x1b, 0x11, 0xc4,
  0x42, 0x4c, 0x12, 0xe7, 0x50, 0xcd, 0xb4, 0x51, 0x45, 0x41, 0x44, 0xbf,
  0xab, 0xbd, 0x7f, 0x04, 0x58, 0x01, 0x55, 0x98, 0x0d, 0xd6, 0x46, 0x04,
  0xb1, 0x10, 0x13, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93, 0xf4, 0x0b, 0x01,
  0x55, 0x14, 0x44, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
