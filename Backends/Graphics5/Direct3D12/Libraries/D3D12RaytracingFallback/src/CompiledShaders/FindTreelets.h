#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer TreeletConstants
; {
;
;   struct TreeletConstants
;   {
;
;       struct struct.InputConstants
;       {
;
;           uint NumberOfElements;                    ; Offset:    0
;           uint MinTrianglesPerTreelet;              ; Offset:    4
;       
;       } Constants                                   ; Offset:    0
;
;   
;   } TreeletConstants                                ; Offset:    0 Size:     8
;
; }
;
; Resource bind info for InputBuffer
; {
;
;   struct struct.Primitive
;   {
;
;       uint PrimitiveType;                           ; Offset:    0
;       uint4 data0;                                  ; Offset:   16
;       uint4 data1;                                  ; Offset:   32
;       uint data2;                                   ; Offset:   48
;   
;   } $Element;                                       ; Offset:    0 Size:    40
;
; }
;
; Resource bind info for hierarchyBuffer
; {
;
;   struct struct.HierarchyNode
;   {
;
;       uint ParentIndex;                             ; Offset:    0
;       uint LeftChildIndex;                          ; Offset:    4
;       uint RightChildIndex;                         ; Offset:    8
;   
;   } $Element;                                       ; Offset:    0 Size:    12
;
; }
;
; Resource bind info for AABBBuffer
; {
;
;   struct struct.AABB
;   {
;
;       float3 min;                                   ; Offset:    0
;       float3 max;                                   ; Offset:   16
;   
;   } $Element;                                       ; Offset:    0 Size:    24
;
; }
;
; Resource bind info for BaseTreeletsIndexBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; TreeletConstants                  cbuffer      NA          NA     CB0            cb0     1
; InputBuffer                           UAV  struct         r/w      U0             u3     1
; NumTrianglesBuffer                    UAV    byte         r/w      U1             u1     1
; hierarchyBuffer                       UAV  struct         r/w      U2             u0     1
; AABBBuffer                            UAV  struct         r/w      U3             u2     1
; BaseTreeletsCountBuffer               UAV    byte         r/w      U4             u4     1
; BaseTreeletsIndexBuffer               UAV  struct         r/w      U5             u5     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%"class.RWStructuredBuffer<Primitive>" = type { %struct.Primitive }
%struct.Primitive = type { i32, <4 x i32>, <4 x i32>, i32 }
%struct.RWByteAddressBuffer = type { i32 }
%"class.RWStructuredBuffer<HierarchyNode>" = type { %struct.HierarchyNode }
%struct.HierarchyNode = type { i32, i32, i32 }
%"class.RWStructuredBuffer<AABB>" = type { %struct.AABB }
%struct.AABB = type { <3 x float>, <3 x float> }
%"class.RWStructuredBuffer<unsigned int>" = type { i32 }
%TreeletConstants = type { %struct.InputConstants }
%struct.InputConstants = type { i32, i32 }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%struct.Triangle = type { <3 x float>, <3 x float>, <3 x float> }
%struct.BoundingBox = type { <3 x float>, <3 x float> }

@"\01?InputBuffer@@3V?$RWStructuredBuffer@UPrimitive@@@@A" = external constant %"class.RWStructuredBuffer<Primitive>", align 4
@"\01?NumTrianglesBuffer@@3URWByteAddressBuffer@@A" = external constant %struct.RWByteAddressBuffer, align 4
@"\01?hierarchyBuffer@@3V?$RWStructuredBuffer@UHierarchyNode@@@@A" = external constant %"class.RWStructuredBuffer<HierarchyNode>", align 4
@"\01?AABBBuffer@@3V?$RWStructuredBuffer@UAABB@@@@A" = external constant %"class.RWStructuredBuffer<AABB>", align 4
@"\01?BaseTreeletsCountBuffer@@3URWByteAddressBuffer@@A" = external constant %struct.RWByteAddressBuffer, align 4
@"\01?BaseTreeletsIndexBuffer@@3V?$RWStructuredBuffer@I@@A" = external constant %"class.RWStructuredBuffer<unsigned int>", align 4
@TreeletConstants = external constant %TreeletConstants

define void @main() {
  %BaseTreeletsIndexBuffer_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 5, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %BaseTreeletsCountBuffer_UAV_rawbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 4, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %AABBBuffer_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 3, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %hierarchyBuffer_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 2, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %NumTrianglesBuffer_UAV_rawbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %InputBuffer_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %TreeletConstants_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %2 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %TreeletConstants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %3 = extractvalue %dx.types.CBufRet.i32 %2, 0
  %4 = icmp ult i32 %1, %3
  br i1 %4, label %5, label %.loopexit

; <label>:5                                       ; preds = %0
  %6 = add i32 %3, -1
  %7 = xor i32 %1, -1
  %8 = add i32 %6, %7
  %9 = add i32 %8, %3
  br label %10

; <label>:10                                      ; preds = %55, %5
  %nodeIndex.0 = phi i32 [ %9, %5 ], [ %57, %55 ]
  %numTriangles.0 = phi i32 [ 1, %5 ], [ %60, %55 ]
  %isLeaf.0 = phi i1 [ true, %5 ], [ false, %55 ]
  br i1 %isLeaf.0, label %11, label %30

; <label>:11                                      ; preds = %10
  %12 = sub i32 %nodeIndex.0, %6
  %13 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %InputBuffer_UAV_structbuf, i32 %12, i32 0)  ; BufferLoad(srv,index,wot)
  %14 = extractvalue %dx.types.ResRet.i32 %13, 0
  %15 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %InputBuffer_UAV_structbuf, i32 %12, i32 4)  ; BufferLoad(srv,index,wot)
  %16 = extractvalue %dx.types.ResRet.i32 %15, 0
  %17 = extractvalue %dx.types.ResRet.i32 %15, 1
  %18 = extractvalue %dx.types.ResRet.i32 %15, 2
  %19 = extractvalue %dx.types.ResRet.i32 %15, 3
  %20 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %InputBuffer_UAV_structbuf, i32 %12, i32 20)  ; BufferLoad(srv,index,wot)
  %21 = extractvalue %dx.types.ResRet.i32 %20, 0
  %22 = extractvalue %dx.types.ResRet.i32 %20, 1
  %23 = icmp eq i32 %14, 1
  br i1 %23, label %24, label %29

; <label>:24                                      ; preds = %11
  %25 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %InputBuffer_UAV_structbuf, i32 %12, i32 36)  ; BufferLoad(srv,index,wot)
  %26 = extractvalue %dx.types.ResRet.i32 %25, 0
  %27 = extractvalue %dx.types.ResRet.i32 %20, 3
  %28 = extractvalue %dx.types.ResRet.i32 %20, 2
  %.i0 = bitcast i32 %16 to float
  %.i1 = bitcast i32 %17 to float
  %.i2 = bitcast i32 %18 to float
  %.i038 = bitcast i32 %19 to float
  %.i139 = bitcast i32 %21 to float
  %.i240 = bitcast i32 %22 to float
  %.i041 = bitcast i32 %28 to float
  %.i142 = bitcast i32 %27 to float
  %.i243 = bitcast i32 %26 to float
  %FMin35 = call float @dx.op.binary.f32(i32 36, float %.i0, float %.i038)  ; FMin(a,b)
  %FMin36 = call float @dx.op.binary.f32(i32 36, float %.i1, float %.i139)  ; FMin(a,b)
  %FMin37 = call float @dx.op.binary.f32(i32 36, float %.i2, float %.i240)  ; FMin(a,b)
  %FMin32 = call float @dx.op.binary.f32(i32 36, float %FMin35, float %.i041)  ; FMin(a,b)
  %FMin33 = call float @dx.op.binary.f32(i32 36, float %FMin36, float %.i142)  ; FMin(a,b)
  %FMin34 = call float @dx.op.binary.f32(i32 36, float %FMin37, float %.i243)  ; FMin(a,b)
  %FMax29 = call float @dx.op.binary.f32(i32 35, float %.i0, float %.i038)  ; FMax(a,b)
  %FMax30 = call float @dx.op.binary.f32(i32 35, float %.i1, float %.i139)  ; FMax(a,b)
  %FMax31 = call float @dx.op.binary.f32(i32 35, float %.i2, float %.i240)  ; FMax(a,b)
  %FMax26 = call float @dx.op.binary.f32(i32 35, float %FMax29, float %.i041)  ; FMax(a,b)
  %FMax27 = call float @dx.op.binary.f32(i32 35, float %FMax30, float %.i142)  ; FMax(a,b)
  %FMax28 = call float @dx.op.binary.f32(i32 35, float %FMax31, float %.i243)  ; FMax(a,b)
  %.i044 = fadd fast float %FMax26, 0xBF50624DE0000000
  %.i145 = fadd fast float %FMax27, 0xBF50624DE0000000
  %.i246 = fadd fast float %FMax28, 0xBF50624DE0000000
  %FMin23 = call float @dx.op.binary.f32(i32 36, float %FMin32, float %.i044)  ; FMin(a,b)
  %FMin24 = call float @dx.op.binary.f32(i32 36, float %FMin33, float %.i145)  ; FMin(a,b)
  %FMin25 = call float @dx.op.binary.f32(i32 36, float %FMin34, float %.i246)  ; FMin(a,b)
  %.i047 = fadd fast float %FMin23, %FMax26
  %.i148 = fadd fast float %FMin24, %FMax27
  %.i249 = fadd fast float %FMin25, %FMax28
  %.i050 = fmul fast float %.i047, 5.000000e-01
  %.i151 = fmul fast float %.i148, 5.000000e-01
  %.i252 = fmul fast float %.i249, 5.000000e-01
  %.i053.neg = fsub fast float %.i050, %FMax26
  %.i056 = fadd fast float %.i053.neg, %.i050
  %.i154.neg = fsub fast float %.i151, %FMax27
  %.i157 = fadd fast float %.i154.neg, %.i151
  %.i255.neg = fsub fast float %.i252, %FMax28
  %.i258 = fadd fast float %.i255.neg, %.i252
  br label %"\01?ComputeLeafAABB@@YA?AUAABB@@I@Z.exit"

; <label>:29                                      ; preds = %11
  %.i062 = bitcast i32 %16 to float
  %.i163 = bitcast i32 %17 to float
  %.i264 = bitcast i32 %18 to float
  %.i065 = bitcast i32 %19 to float
  %.i166 = bitcast i32 %21 to float
  %.i267 = bitcast i32 %22 to float
  br label %"\01?ComputeLeafAABB@@YA?AUAABB@@I@Z.exit"

; <label>:30                                      ; preds = %10
  %31 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %hierarchyBuffer_UAV_structbuf, i32 %nodeIndex.0, i32 4)  ; BufferLoad(srv,index,wot)
  %32 = extractvalue %dx.types.ResRet.i32 %31, 0
  %33 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %AABBBuffer_UAV_structbuf, i32 %32, i32 0)  ; BufferLoad(srv,index,wot)
  %34 = extractvalue %dx.types.ResRet.f32 %33, 0
  %35 = extractvalue %dx.types.ResRet.f32 %33, 1
  %36 = extractvalue %dx.types.ResRet.f32 %33, 2
  %37 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %AABBBuffer_UAV_structbuf, i32 %32, i32 12)  ; BufferLoad(srv,index,wot)
  %38 = extractvalue %dx.types.ResRet.f32 %37, 0
  %39 = extractvalue %dx.types.ResRet.f32 %37, 1
  %40 = extractvalue %dx.types.ResRet.f32 %37, 2
  %41 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %hierarchyBuffer_UAV_structbuf, i32 %nodeIndex.0, i32 8)  ; BufferLoad(srv,index,wot)
  %42 = extractvalue %dx.types.ResRet.i32 %41, 0
  %43 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %AABBBuffer_UAV_structbuf, i32 %42, i32 0)  ; BufferLoad(srv,index,wot)
  %44 = extractvalue %dx.types.ResRet.f32 %43, 0
  %45 = extractvalue %dx.types.ResRet.f32 %43, 1
  %46 = extractvalue %dx.types.ResRet.f32 %43, 2
  %47 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %AABBBuffer_UAV_structbuf, i32 %42, i32 12)  ; BufferLoad(srv,index,wot)
  %48 = extractvalue %dx.types.ResRet.f32 %47, 0
  %49 = extractvalue %dx.types.ResRet.f32 %47, 1
  %50 = extractvalue %dx.types.ResRet.f32 %47, 2
  %FMin = call float @dx.op.binary.f32(i32 36, float %34, float %44)  ; FMin(a,b)
  %FMin21 = call float @dx.op.binary.f32(i32 36, float %35, float %45)  ; FMin(a,b)
  %FMin22 = call float @dx.op.binary.f32(i32 36, float %36, float %46)  ; FMin(a,b)
  %FMax = call float @dx.op.binary.f32(i32 35, float %38, float %48)  ; FMax(a,b)
  %FMax19 = call float @dx.op.binary.f32(i32 35, float %39, float %49)  ; FMax(a,b)
  %FMax20 = call float @dx.op.binary.f32(i32 35, float %40, float %50)  ; FMax(a,b)
  br label %"\01?ComputeLeafAABB@@YA?AUAABB@@I@Z.exit"

"\01?ComputeLeafAABB@@YA?AUAABB@@I@Z.exit":       ; preds = %30, %29, %24
  %nodeAABB.0.0.i0 = phi float [ %FMin, %30 ], [ %.i056, %24 ], [ %.i062, %29 ]
  %nodeAABB.0.0.i1 = phi float [ %FMin21, %30 ], [ %.i157, %24 ], [ %.i163, %29 ]
  %nodeAABB.0.0.i2 = phi float [ %FMin22, %30 ], [ %.i258, %24 ], [ %.i264, %29 ]
  %nodeAABB.1.0.i0 = phi float [ %FMax, %30 ], [ %FMax26, %24 ], [ %.i065, %29 ]
  %nodeAABB.1.0.i1 = phi float [ %FMax19, %30 ], [ %FMax27, %24 ], [ %.i166, %29 ]
  %nodeAABB.1.0.i2 = phi float [ %FMax20, %30 ], [ %FMax28, %24 ], [ %.i267, %29 ]
  call void @dx.op.bufferStore.f32(i32 69, %dx.types.Handle %AABBBuffer_UAV_structbuf, i32 %nodeIndex.0, i32 0, float %nodeAABB.0.0.i0, float %nodeAABB.0.0.i1, float %nodeAABB.0.0.i2, float undef, i8 7)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  call void @dx.op.bufferStore.f32(i32 69, %dx.types.Handle %AABBBuffer_UAV_structbuf, i32 %nodeIndex.0, i32 12, float %nodeAABB.1.0.i0, float %nodeAABB.1.0.i1, float %nodeAABB.1.0.i2, float undef, i8 7)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  call void @dx.op.barrier(i32 80, i32 2)  ; Barrier(barrierMode)
  %51 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %TreeletConstants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.i32 %51, 1
  %53 = icmp ult i32 %numTriangles.0, %52
  br i1 %53, label %55, label %54

; <label>:54                                      ; preds = %"\01?ComputeLeafAABB@@YA?AUAABB@@I@Z.exit"
  %nodeIndex.0.lcssa = phi i32 [ %nodeIndex.0, %"\01?ComputeLeafAABB@@YA?AUAABB@@I@Z.exit" ]
  %AtomicAdd = call i32 @dx.op.atomicBinOp.i32(i32 78, %dx.types.Handle %BaseTreeletsCountBuffer_UAV_rawbuf, i32 0, i32 0, i32 undef, i32 undef, i32 1)  ; AtomicBinOp(handle,atomicOp,offset0,offset1,offset2,newValue)
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %BaseTreeletsIndexBuffer_UAV_structbuf, i32 %AtomicAdd, i32 0, i32 %nodeIndex.0.lcssa, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  br label %.loopexit

; <label>:55                                      ; preds = %"\01?ComputeLeafAABB@@YA?AUAABB@@I@Z.exit"
  %56 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %hierarchyBuffer_UAV_structbuf, i32 %nodeIndex.0, i32 0)  ; BufferLoad(srv,index,wot)
  %57 = extractvalue %dx.types.ResRet.i32 %56, 0
  %58 = shl i32 %57, 2
  %AtomicAdd14 = call i32 @dx.op.atomicBinOp.i32(i32 78, %dx.types.Handle %NumTrianglesBuffer_UAV_rawbuf, i32 0, i32 %58, i32 undef, i32 undef, i32 %numTriangles.0)  ; AtomicBinOp(handle,atomicOp,offset0,offset1,offset2,newValue)
  %59 = icmp eq i32 %AtomicAdd14, 0
  %60 = add i32 %AtomicAdd14, %numTriangles.0
  br i1 %59, label %.loopexit.loopexit, label %10

.loopexit.loopexit:                               ; preds = %55
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %54, %0
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #2

; Function Attrs: nounwind
declare i32 @dx.op.atomicBinOp.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.bufferStore.f32(i32, %dx.types.Handle, i32, i32, float, float, float, float, i8) #3

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.bufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8) #3

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { noduplicate nounwind }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!18, !51}
!dx.entryPoints = !{!55}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 3}
!3 = !{!"cs", i32 6, i32 0}
!4 = !{null, !5, !16, null}
!5 = !{!6, !8, !9, !11, !13, !14}
!6 = !{i32 0, %"class.RWStructuredBuffer<Primitive>"* undef, !"InputBuffer", i32 0, i32 3, i32 1, i32 12, i1 false, i1 false, i1 false, !7}
!7 = !{i32 1, i32 40}
!8 = !{i32 1, %struct.RWByteAddressBuffer* undef, !"NumTrianglesBuffer", i32 0, i32 1, i32 1, i32 11, i1 true, i1 false, i1 false, null}
!9 = !{i32 2, %"class.RWStructuredBuffer<HierarchyNode>"* undef, !"hierarchyBuffer", i32 0, i32 0, i32 1, i32 12, i1 true, i1 false, i1 false, !10}
!10 = !{i32 1, i32 12}
!11 = !{i32 3, %"class.RWStructuredBuffer<AABB>"* undef, !"AABBBuffer", i32 0, i32 2, i32 1, i32 12, i1 true, i1 false, i1 false, !12}
!12 = !{i32 1, i32 24}
!13 = !{i32 4, %struct.RWByteAddressBuffer* undef, !"BaseTreeletsCountBuffer", i32 0, i32 4, i32 1, i32 11, i1 true, i1 false, i1 false, null}
!14 = !{i32 5, %"class.RWStructuredBuffer<unsigned int>"* undef, !"BaseTreeletsIndexBuffer", i32 0, i32 5, i32 1, i32 12, i1 false, i1 false, i1 false, !15}
!15 = !{i32 1, i32 4}
!16 = !{!17}
!17 = !{i32 0, %TreeletConstants* undef, !"TreeletConstants", i32 0, i32 0, i32 1, i32 8, null}
!18 = !{i32 0, %"class.RWStructuredBuffer<Primitive>" undef, !19, %struct.Primitive undef, !21, %struct.RWByteAddressBuffer undef, !26, %"class.RWStructuredBuffer<HierarchyNode>" undef, !28, %struct.HierarchyNode undef, !29, %"class.RWStructuredBuffer<AABB>" undef, !33, %struct.AABB undef, !34, %"class.RWStructuredBuffer<unsigned int>" undef, !37, %struct.InputConstants undef, !39, %struct.Triangle undef, !42, %struct.BoundingBox undef, !46, %TreeletConstants undef, !49}
!19 = !{i32 52, !20}
!20 = !{i32 6, !"h", i32 3, i32 0}
!21 = !{i32 52, !22, !23, !24, !25}
!22 = !{i32 6, !"PrimitiveType", i32 3, i32 0, i32 7, i32 5}
!23 = !{i32 6, !"data0", i32 3, i32 16, i32 7, i32 5}
!24 = !{i32 6, !"data1", i32 3, i32 32, i32 7, i32 5}
!25 = !{i32 6, !"data2", i32 3, i32 48, i32 7, i32 5}
!26 = !{i32 4, !27}
!27 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!28 = !{i32 12, !20}
!29 = !{i32 12, !30, !31, !32}
!30 = !{i32 6, !"ParentIndex", i32 3, i32 0, i32 7, i32 5}
!31 = !{i32 6, !"LeftChildIndex", i32 3, i32 4, i32 7, i32 5}
!32 = !{i32 6, !"RightChildIndex", i32 3, i32 8, i32 7, i32 5}
!33 = !{i32 28, !20}
!34 = !{i32 28, !35, !36}
!35 = !{i32 6, !"min", i32 3, i32 0, i32 7, i32 9}
!36 = !{i32 6, !"max", i32 3, i32 16, i32 7, i32 9}
!37 = !{i32 4, !38}
!38 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 5}
!39 = !{i32 8, !40, !41}
!40 = !{i32 6, !"NumberOfElements", i32 3, i32 0, i32 7, i32 5}
!41 = !{i32 6, !"MinTrianglesPerTreelet", i32 3, i32 4, i32 7, i32 5}
!42 = !{i32 44, !43, !44, !45}
!43 = !{i32 6, !"v0", i32 3, i32 0, i32 7, i32 9}
!44 = !{i32 6, !"v1", i32 3, i32 16, i32 7, i32 9}
!45 = !{i32 6, !"v2", i32 3, i32 32, i32 7, i32 9}
!46 = !{i32 28, !47, !48}
!47 = !{i32 6, !"center", i32 3, i32 0, i32 7, i32 9}
!48 = !{i32 6, !"halfDim", i32 3, i32 16, i32 7, i32 9}
!49 = !{i32 8, !50}
!50 = !{i32 6, !"Constants", i32 3, i32 0}
!51 = !{i32 1, void ()* @main, !52}
!52 = !{!53}
!53 = !{i32 0, !54, !54}
!54 = !{}
!55 = !{void ()* @main, !"main", null, !4, !56}
!56 = !{i32 0, i64 16, i32 4, !57}
!57 = !{i32 64, i32 1, i32 1}

#endif

const unsigned char g_pFindTreelets[] = {
  0x44, 0x58, 0x42, 0x43, 0xad, 0x3a, 0x0c, 0x45, 0x38, 0x24, 0x8a, 0xf2,
  0x4d, 0x1b, 0x3d, 0xf8, 0x3e, 0xa8, 0x30, 0x23, 0x01, 0x00, 0x00, 0x00,
  0x80, 0x14, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0x18, 0x01, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xac, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x60, 0x13, 0x00, 0x00,
  0x60, 0x00, 0x05, 0x00, 0xd8, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x13, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xcf, 0x04, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x63,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x60, 0x00, 0x69, 0x03, 0x41, 0xfc,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x48, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xdc, 0xc1, 0x1c, 0x01, 0x18, 0x0c, 0x23,
  0x10, 0xc0, 0x41, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xa7, 0x11, 0xc2, 0x20,
  0x13, 0x52, 0x11, 0x88, 0x00, 0x82, 0x00, 0x98, 0x69, 0x0c, 0xc6, 0x81,
  0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x64, 0xe1, 0x16, 0x66, 0x81,
  0x1e, 0xe4, 0xa1, 0x1e, 0xc6, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x81,
  0x1c, 0x44, 0xa1, 0x1e, 0xcc, 0xc1, 0x1c, 0xca, 0x41, 0x1e, 0xf8, 0x00,
  0x16, 0xe4, 0x21, 0x1d, 0xda, 0x21, 0x1d, 0xe8, 0x21, 0x1d, 0xec, 0xa1,
  0x1c, 0xfc, 0x00, 0x05, 0x02, 0x0d, 0xa7, 0x49, 0x53, 0x44, 0x09, 0x93,
  0xbf, 0xc2, 0x1b, 0x36, 0x11, 0xda, 0x30, 0x44, 0x84, 0x24, 0x6d, 0x54,
  0x51, 0x10, 0x11, 0x0a, 0x00, 0x2a, 0x8e, 0x92, 0xa6, 0x88, 0x12, 0x26,
  0x3f, 0x44, 0x88, 0x08, 0x88, 0x84, 0x03, 0x3b, 0x9d, 0x81, 0x40, 0x03,
  0x00, 0x00, 0x33, 0x9d, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c,
  0xb8, 0x81, 0x2c, 0xdc, 0xc2, 0x2c, 0xd0, 0x83, 0x3c, 0xd4, 0xc3, 0x38,
  0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0x90, 0x83, 0x28, 0xd4, 0x83, 0x39,
  0x98, 0x43, 0x39, 0xc8, 0x03, 0x1f, 0xa0, 0x42, 0x3a, 0x94, 0x83, 0x3c,
  0x84, 0x83, 0x3c, 0x8c, 0x03, 0x3a, 0xe4, 0x83, 0x2b, 0xbc, 0x03, 0x39,
  0x94, 0x83, 0x1f, 0xa0, 0xe0, 0x20, 0x64, 0x06, 0x60, 0x18, 0x61, 0x50,
  0x6e, 0x91, 0xa6, 0x88, 0x12, 0x26, 0x5f, 0xd3, 0xb6, 0x0d, 0x09, 0xcb,
  0x32, 0x93, 0x37, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x20,
  0x0b, 0xb7, 0x30, 0x0b, 0xf4, 0x20, 0x0f, 0xf5, 0x30, 0x0e, 0xf4, 0x50,
  0x0f, 0xf2, 0x50, 0x0e, 0xe4, 0x20, 0x0a, 0xf5, 0x60, 0x0e, 0xe6, 0x50,
  0x0e, 0xf2, 0xc0, 0x07, 0xa1, 0x10, 0x0a, 0xa2, 0x20, 0x0a, 0x7e, 0x80,
  0x02, 0x86, 0x9a, 0x99, 0xcc, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61,
  0x1e, 0xdc, 0x40, 0x16, 0x6e, 0x61, 0x16, 0xe8, 0x41, 0x1e, 0xea, 0x61,
  0x1c, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xc8, 0x41, 0x14, 0xea, 0xc1,
  0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0x81, 0x0f, 0xea, 0xc1, 0x1d, 0xe6, 0x21,
  0x1d, 0xce, 0xc1, 0x1d, 0xca, 0x81, 0x1c, 0xc0, 0x20, 0x1d, 0xdc, 0x81,
  0x1e, 0xfc, 0x00, 0x05, 0x00, 0x3d, 0x57, 0x49, 0x53, 0x44, 0x09, 0x93,
  0x2f, 0x36, 0x0f, 0x35, 0x71, 0x4e, 0x23, 0x4d, 0x40, 0x33, 0x49, 0x48,
  0x00, 0x80, 0x83, 0xda, 0x88, 0x20, 0x16, 0x62, 0xe2, 0x9c, 0x46, 0x9a,
  0x80, 0x66, 0x92, 0x50, 0x10, 0x91, 0x34, 0x02, 0x50, 0x02, 0x8a, 0xaa,
  0x32, 0x00, 0x00, 0x40, 0xd7, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48,
  0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0x88, 0x00, 0x00,
  0x00, 0x98, 0x23, 0x40, 0x48, 0xbb, 0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08,
  0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14, 0x6c, 0x85, 0xc8, 0x00, 0x0e,
  0xa0, 0xae, 0x0c, 0x14, 0x00, 0xd0, 0x57, 0x10, 0x00, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x0a, 0x0b, 0xa1, 0x00, 0x8a, 0x42, 0xe3, 0x1c, 0x41, 0x50,
  0x0c, 0x0e, 0xd0, 0x00, 0xa0, 0x24, 0xf3, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0xa1,
  0x28, 0x8a, 0x02, 0x94, 0x02, 0x05, 0x38, 0x00, 0xa0, 0xb4, 0x28, 0x14,
  0xc0, 0x01, 0x80, 0xa2, 0x28, 0x8a, 0x46, 0xeb, 0x4d, 0xc3, 0xe5, 0x4f,
  0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3,
  0x02, 0x00, 0x00, 0x00, 0x28, 0x45, 0x0b, 0x70, 0x00, 0x40, 0x6e, 0x51,
  0x28, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x8d, 0xe0, 0x81, 0x80, 0x7b,
  0xa4, 0x29, 0xa2, 0x84, 0xc9, 0x6f, 0x23, 0x04, 0x68, 0x8c, 0x85, 0x40,
  0xc3, 0xb2, 0x2c, 0x27, 0x49, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x39, 0x54,
  0x33, 0x20, 0x8d, 0xb1, 0x39, 0x17, 0x12, 0x96, 0x65, 0x8e, 0x00, 0x14,
  0xa6, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0xa4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x8e, 0x01, 0x00, 0xb3, 0x0c,
  0x00, 0x98, 0x68, 0x00, 0xc0, 0x6c, 0x03, 0x00, 0x66, 0x19, 0x00, 0x30,
  0xdf, 0x00, 0x80, 0x29, 0x07, 0x00, 0x30, 0xe4, 0xa9, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x73, 0x01, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x03,
  0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf,
  0x07, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x9e, 0x30, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0xcf, 0x18, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0xc7, 0x0c, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93, 0x06, 0x40, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x59, 0x03, 0x20, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0xb8, 0x01,
  0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0xe0, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb2, 0x40, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0x60, 0x04, 0xa0, 0x0c, 0x8a, 0xa1, 0x30, 0x0a, 0xaa, 0x2c, 0x8a,
  0xa0, 0x60, 0x0a, 0xa1, 0x14, 0x0a, 0xa2, 0xd0, 0xca, 0xa1, 0x40, 0x0a,
  0xa8, 0xc0, 0x0a, 0xa7, 0x24, 0x0a, 0xab, 0x00, 0x03, 0xa8, 0x2e, 0x10,
  0x2a, 0x6b, 0x60, 0x04, 0x80, 0x8a, 0x19, 0x00, 0x32, 0x66, 0x00, 0xe8,
  0x98, 0x01, 0x20, 0x64, 0x06, 0x80, 0x92, 0x19, 0x00, 0x62, 0x66, 0x00,
  0xa8, 0x99, 0x01, 0x20, 0x67, 0x06, 0x80, 0x9e, 0x19, 0x00, 0x82, 0x66,
  0x00, 0x28, 0x9a, 0x01, 0x20, 0x69, 0x06, 0x80, 0xa6, 0x19, 0x00, 0x22,
  0x66, 0x00, 0x68, 0x98, 0x01, 0xa0, 0x79, 0x06, 0x80, 0xe8, 0x19, 0x00,
  0x12, 0x66, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c,
  0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10, 0x00, 0x69, 0x82, 0x00,
  0x4c, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x00, 0xd4, 0x06, 0x61, 0x30, 0x28,
  0x8c, 0xcd, 0x4d, 0x10, 0x80, 0x6a, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x81,
  0xb8, 0x03, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x75, 0x66, 0x66,
  0x65, 0x72, 0x13, 0x04, 0xc0, 0x9a, 0x20, 0x94, 0x41, 0x1a, 0x4c, 0x10,
  0x80, 0x6b, 0x83, 0x30, 0x3c, 0x1b, 0x16, 0x62, 0x61, 0x08, 0x63, 0x68,
  0x1c, 0xc7, 0x81, 0x26, 0x08, 0xc6, 0x1a, 0x50, 0x72, 0xaa, 0x6b, 0xa3,
  0x92, 0x4b, 0x0b, 0x73, 0x3b, 0x63, 0x2b, 0x9b, 0x13, 0xaa, 0x33, 0x33,
  0x2b, 0x93, 0x9b, 0x20, 0x00, 0xd8, 0x04, 0xa1, 0x0c, 0xd0, 0x60, 0xc3,
  0x32, 0x48, 0x13, 0x31, 0x0c, 0x54, 0xe5, 0x38, 0xc0, 0x04, 0x01, 0xc8,
  0x26, 0x08, 0x89, 0x1b, 0xf0, 0x41, 0x4b, 0x2b, 0x93, 0x0b, 0x93, 0x1b,
  0x43, 0xcb, 0x13, 0xaa, 0x33, 0x33, 0x2b, 0x93, 0xdb, 0x20, 0x0c, 0xcd,
  0x86, 0xe5, 0xc2, 0x32, 0x82, 0x18, 0x9a, 0xca, 0x71, 0xb4, 0x09, 0x82,
  0x13, 0x07, 0x54, 0x82, 0x82, 0x84, 0x84, 0x84, 0xea, 0xcc, 0xcc, 0xca,
  0xe4, 0x26, 0x08, 0x80, 0xb6, 0x41, 0x18, 0xbc, 0x0d, 0x8b, 0xc1, 0x75,
  0xc4, 0x35, 0x34, 0x95, 0xe3, 0x7c, 0x13, 0x04, 0x60, 0xe3, 0x25, 0x14,
  0x36, 0x57, 0x46, 0x25, 0x57, 0x56, 0xc6, 0x56, 0x46, 0x37, 0x37, 0xf4,
  0x56, 0xe7, 0x46, 0x27, 0x54, 0x67, 0x66, 0x56, 0x26, 0xb7, 0x61, 0x09,
  0x03, 0x49, 0x0c, 0x88, 0x30, 0x18, 0xa8, 0xca, 0x71, 0x80, 0x09, 0x02,
  0xc0, 0x4d, 0x10, 0xa0, 0x39, 0xe0, 0x25, 0x14, 0x36, 0x57, 0x46, 0x25,
  0x57, 0x56, 0xc6, 0x56, 0x46, 0x37, 0x97, 0xe4, 0x46, 0x56, 0x86, 0x27,
  0x54, 0x67, 0x66, 0x56, 0x26, 0xb7, 0x41, 0x18, 0xc2, 0x60, 0xc3, 0x42,
  0x06, 0x65, 0x60, 0x06, 0x04, 0x19, 0x0c, 0x8d, 0xe3, 0x38, 0x67, 0xb0,
  0xc1, 0x88, 0xac, 0x0d, 0x0c, 0xc6, 0x00, 0x0d, 0x26, 0x08, 0x93, 0x1d,
  0x10, 0xa2, 0x92, 0x2b, 0x2b, 0x63, 0x2b, 0xa3, 0x1b, 0x7a, 0x73, 0x9b,
  0xa3, 0x0b, 0x73, 0xa3, 0x9b, 0x9b, 0x20, 0x00, 0xdd, 0x06, 0x84, 0x50,
  0x83, 0x35, 0x20, 0x88, 0x81, 0x0d, 0x80, 0x0d, 0x41, 0x1b, 0x6c, 0x20,
  0x80, 0x34, 0x70, 0x03, 0x60, 0x82, 0x30, 0xe0, 0xc1, 0x04, 0x01, 0xf0,
  0x18, 0xa0, 0x6d, 0x20, 0x12, 0x39, 0x30, 0x88, 0x0d, 0x42, 0x1c, 0xcc,
  0xc1, 0x04, 0x41, 0xd8, 0x03, 0x36, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74,
  0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x13, 0x04, 0xe0, 0xdb, 0x60,
  0x24, 0x76, 0x60, 0x10, 0x77, 0x40, 0x06, 0x2c, 0xc8, 0xc2, 0xe8, 0xc2,
  0x60, 0x26, 0x08, 0x00, 0x18, 0x6c, 0x30, 0x92, 0x3c, 0x30, 0xf4, 0xe0,
  0x0e, 0xc8, 0x80, 0x05, 0x59, 0x18, 0x5d, 0x58, 0xcc, 0x04, 0x01, 0x08,
  0x83, 0x0d, 0x46, 0xc2, 0x07, 0x46, 0x1f, 0xdc, 0x01, 0x19, 0xb0, 0x20,
  0x0b, 0xa3, 0x0b, 0x93, 0x99, 0x20, 0x00, 0x62, 0xb0, 0xc1, 0x48, 0xfe,
  0xc0, 0x00, 0x85, 0x3b, 0x20, 0x83, 0x0d, 0x45, 0x1c, 0xe0, 0xc1, 0x1e,
  0xf8, 0x41, 0x28, 0x4c, 0x10, 0x0a, 0x35, 0xd8, 0x60, 0x24, 0x72, 0x60,
  0x10, 0x77, 0x10, 0x06, 0x1b, 0x84, 0x30, 0x20, 0x85, 0x09, 0x02, 0xd2,
  0x06, 0x1b, 0x84, 0x66, 0x0e, 0x26, 0x08, 0x07, 0x1b, 0x70, 0x81, 0x0a,
  0x93, 0x2b, 0x73, 0xa3, 0x4b, 0x72, 0x23, 0x2b, 0xc3, 0xdb, 0x60, 0x24,
  0xa9, 0x60, 0x10, 0x77, 0x40, 0x06, 0x74, 0x98, 0xca, 0xcc, 0xe8, 0x86,
  0xd0, 0xd2, 0xd8, 0xc8, 0x92, 0xdc, 0xc8, 0xca, 0xf0, 0x36, 0x18, 0xc9,
  0x2a, 0x18, 0x61, 0x70, 0x07, 0x64, 0xc0, 0x47, 0x2a, 0xed, 0x0c, 0x8d,
  0x6e, 0x08, 0x2d, 0x8d, 0x8d, 0x2c, 0xc9, 0x8d, 0xac, 0x0c, 0x6f, 0x83,
  0x91, 0xb4, 0x82, 0xc1, 0x06, 0x77, 0x40, 0x06, 0x1b, 0x88, 0x46, 0x15,
  0x58, 0xc1, 0x15, 0x26, 0x08, 0x0d, 0x1c, 0x4c, 0x10, 0x80, 0x31, 0xd8,
  0x20, 0xc4, 0xc2, 0x1c, 0x4c, 0x10, 0x98, 0x37, 0xe0, 0xd0, 0x96, 0xe6,
  0x36, 0x41, 0x00, 0xc8, 0x60, 0x83, 0x91, 0xd0, 0x82, 0x41, 0xdc, 0x41,
  0x2d, 0x70, 0x68, 0x0b, 0xc3, 0xdb, 0x60, 0x24, 0xb7, 0x60, 0xe8, 0xc1,
  0x1d, 0xd4, 0xc2, 0x86, 0x21, 0x16, 0x6c, 0x01, 0x17, 0x26, 0x08, 0x8f,
  0x1c, 0x6c, 0x30, 0x12, 0x39, 0x30, 0x88, 0x3b, 0x20, 0x83, 0x0d, 0x42,
  0x18, 0xec, 0xc2, 0x04, 0x21, 0xa2, 0x03, 0x42, 0x4e, 0x75, 0x6d, 0x62,
  0x65, 0x72, 0x4f, 0x66, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
  0x1b, 0x8c, 0xc4, 0x17, 0x0c, 0xe2, 0x0e, 0xc8, 0x80, 0x56, 0x53, 0x9a,
  0x1b, 0x95, 0x5c, 0x5a, 0x98, 0xdb, 0x19, 0x5b, 0xd9, 0x1c, 0x54, 0x99,
  0x1c, 0x95, 0x5c, 0x59, 0x19, 0x5b, 0x19, 0xdd, 0x06, 0x23, 0x01, 0x07,
  0x23, 0x0c, 0xee, 0x80, 0x0c, 0x36, 0x0c, 0x6c, 0xf0, 0x0b, 0xe1, 0x30,
  0x41, 0x98, 0x83, 0x3c, 0x98, 0x20, 0x00, 0x65, 0x40, 0xc1, 0x0e, 0x66,
  0x83, 0x91, 0x94, 0x83, 0x41, 0xdc, 0x41, 0x2d, 0x50, 0xb0, 0x8b, 0xd9,
  0x60, 0x24, 0xe7, 0x60, 0xe8, 0xc1, 0x1d, 0xd4, 0x02, 0x05, 0x3b, 0x99,
  0x0d, 0x46, 0x92, 0x0e, 0x46, 0x1f, 0xdc, 0x41, 0x2d, 0x6c, 0x20, 0xc8,
  0xc1, 0x1c, 0xd0, 0x41, 0x1d, 0x26, 0x08, 0x74, 0xa0, 0x07, 0x34, 0xc6,
  0xca, 0xdc, 0xe8, 0xca, 0xe4, 0x36, 0x18, 0x49, 0x3b, 0x18, 0xc4, 0x1d,
  0xd4, 0x02, 0x0f, 0xb4, 0x30, 0x36, 0x33, 0xa2, 0xb4, 0xb6, 0x0d, 0x46,
  0xf2, 0x0e, 0x86, 0x1e, 0xdc, 0x41, 0x2d, 0x6c, 0x18, 0x62, 0xc1, 0x1d,
  0xe0, 0x61, 0x82, 0x20, 0xd5, 0x01, 0x93, 0xa1, 0x37, 0xb7, 0x39, 0xba,
  0x30, 0x37, 0xba, 0xb9, 0x0d, 0x44, 0x32, 0x0f, 0x06, 0xb1, 0x41, 0x60,
  0x03, 0x7a, 0xd8, 0x90, 0x11, 0x70, 0x40, 0x07, 0x75, 0x20, 0x0a, 0xa3,
  0x50, 0x0a, 0xa6, 0x70, 0x0a, 0xa8, 0xf0, 0x0a, 0xb0, 0x20, 0x0b, 0xb3,
  0x90, 0x0b, 0xba, 0xc0, 0x0b, 0xbd, 0x20, 0x0e, 0xe3, 0xb0, 0x0e, 0xec,
  0x10, 0x0f, 0xf2, 0x50, 0x0f, 0x13, 0x04, 0xeb, 0xd8, 0x00, 0x6c, 0x18,
  0x08, 0x7c, 0xc0, 0x87, 0x0d, 0x41, 0x3e, 0x6c, 0x18, 0x86, 0x7b, 0xd0,
  0x07, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x13, 0x84, 0x3a, 0x38, 0x83, 0x09,
  0x02, 0x60, 0x06, 0x1b, 0x06, 0x7f, 0x18, 0x86, 0x0d, 0x04, 0xd1, 0x0f,
  0x61, 0xf0, 0x0f, 0x1b, 0x8a, 0x7b, 0xe0, 0x07, 0xe0, 0x0d, 0x40, 0xa2,
  0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a, 0x59, 0x99, 0x1b, 0xdd, 0x94,
  0x20, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57, 0x26, 0x37, 0x97, 0xf6, 0xe6,
  0x36, 0x25, 0x20, 0x9a, 0x90, 0xe1, 0xb9, 0xd8, 0x85, 0xb1, 0xd9, 0x95,
  0xc9, 0x4d, 0x09, 0x8c, 0x3a, 0x64, 0x78, 0x2e, 0x73, 0x68, 0x61, 0x64,
  0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x82, 0xa4, 0x0c, 0x19,
  0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d, 0xdc, 0x58, 0xd9, 0xdc, 0x94,
  0xc0, 0x0d, 0x2a, 0x91, 0xe1, 0xb9, 0xd0, 0xe5, 0xc1, 0x95, 0x05, 0xb9,
  0xb9, 0xbd, 0xd1, 0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0xcd, 0x4d, 0x11, 0xea,
  0x41, 0x1f, 0xea, 0x90, 0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41,
  0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09, 0x40, 0x02, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8,
  0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90,
  0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xd6, 0x20, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x44,
  0x15, 0xd8, 0x41, 0xe0, 0x27, 0x0c, 0xcf, 0xcb, 0x54, 0x79, 0xb9, 0xcc,
  0x2e, 0xd3, 0xe7, 0x49, 0x37, 0xb9, 0x8c, 0x17, 0xd6, 0xcd, 0xe6, 0xb2,
  0x1c, 0x08, 0x9c, 0x59, 0x7f, 0x24, 0xe9, 0x75, 0x4a, 0x97, 0xd7, 0xc7,
  0xf4, 0xba, 0xbc, 0x4c, 0x16, 0xd6, 0xcd, 0xe6, 0xb2, 0x1c, 0x98, 0x04,
  0x02, 0x83, 0x06, 0x41, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x40, 0x15, 0x05,
  0x11, 0x95, 0x0e, 0x30, 0xf8, 0xc8, 0x6d, 0xdb, 0x43, 0x35, 0x5c, 0xbe,
  0xf3, 0xf8, 0x01, 0x55, 0x14, 0x44, 0xc4, 0x4e, 0x4e, 0x44, 0xf8, 0xc5,
  0x6d, 0x57, 0x80, 0x1b, 0x04, 0x7e, 0xce, 0x7a, 0x9b, 0x2a, 0x4f, 0x87,
  0xdd, 0x67, 0x76, 0x79, 0x2e, 0xac, 0x9b, 0xcd, 0x65, 0x39, 0x10, 0x38,
  0xab, 0x4a, 0xaf, 0xc2, 0x3c, 0xbd, 0x1c, 0x24, 0x93, 0xe5, 0xe5, 0xf9,
  0x5c, 0x58, 0x37, 0x9b, 0xcb, 0x72, 0x20, 0x30, 0x68, 0x09, 0xdb, 0x70,
  0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50,
  0x12, 0x06, 0x20, 0x60, 0x3e, 0x72, 0xdb, 0x66, 0x00, 0xb5, 0x11, 0x41,
  0x2c, 0xc4, 0xc4, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24, 0x19, 0x82, 0x34,
  0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11, 0x11, 0xc0, 0x20, 0x0e, 0x3e, 0x72,
  0xdb, 0x05, 0x50, 0x07, 0x81, 0x5f, 0xd2, 0x0d, 0xaf, 0xd3, 0x85, 0x75,
  0xb3, 0xb9, 0x2c, 0x07, 0x02, 0x67, 0xd6, 0x1f, 0x49, 0x7a, 0x9d, 0xd2,
  0xe5, 0xf5, 0x31, 0xbd, 0x2e, 0x2f, 0x93, 0x85, 0x75, 0xb3, 0xb9, 0x2c,
  0x07, 0x56, 0xa1, 0xf2, 0x74, 0x3b, 0x4d, 0x4f, 0xdb, 0xcb, 0x40, 0x20,
  0x10, 0x18, 0x34, 0x85, 0x66, 0xb8, 0x7c, 0xe7, 0xf1, 0x03, 0x20, 0x8a,
  0x10, 0x22, 0xaa, 0x81, 0x37, 0x08, 0xfc, 0x82, 0x41, 0xa1, 0x50, 0x58,
  0x37, 0x9b, 0xcb, 0x72, 0x20, 0x70, 0x66, 0xfd, 0x91, 0xa4, 0xd7, 0x29,
  0x5d, 0x5e, 0x1f, 0xd3, 0xeb, 0xf2, 0x32, 0x59, 0x58, 0x37, 0x9b, 0xcb,
  0x72, 0x60, 0x35, 0x18, 0x14, 0x0a, 0x81, 0x40, 0x20, 0x30, 0x68, 0x07,
  0x04, 0x03, 0x20, 0x8d, 0x2d, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x0f, 0x4c,
  0x0e, 0x83, 0x08, 0x1b, 0xd2, 0xa0, 0x8f, 0x8f, 0xdc, 0xb6, 0x39, 0x50,
  0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c,
  0x7e, 0x71, 0xdb, 0x45, 0x30, 0x07, 0x81, 0x9f, 0x30, 0x3c, 0x2f, 0x53,
  0xe5, 0xe5, 0x32, 0xbb, 0x4c, 0x9f, 0x0f, 0xdf, 0x75, 0x37, 0x5d, 0x58,
  0x37, 0x9b, 0xcb, 0x72, 0x20, 0x70, 0x56, 0x95, 0x5e, 0x85, 0x79, 0x7a,
  0x39, 0x48, 0x26, 0xcb, 0xcb, 0xf3, 0xb9, 0xb0, 0x6e, 0x36, 0x97, 0xe5,
  0x40, 0x60, 0xd0, 0x18, 0xa0, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0x90, 0x06,
  0x88, 0x30, 0xbf, 0xb8, 0xed, 0x12, 0xe8, 0x83, 0xc0, 0x0f, 0x9d, 0x2e,
  0xcb, 0xc3, 0xf2, 0x31, 0x3a, 0x2f, 0xac, 0x9b, 0xcd, 0x65, 0x39, 0x10,
  0x38, 0xb3, 0xfe, 0x48, 0xd2, 0xeb, 0x94, 0x2e, 0xaf, 0x8f, 0xe9, 0x75,
  0x79, 0x99, 0x2c, 0xac, 0x9b, 0xcd, 0x65, 0x39, 0xb0, 0x8a, 0x4c, 0x97,
  0xe5, 0x61, 0xf9, 0x18, 0x9d, 0x77, 0xbe, 0xc9, 0x65, 0x20, 0x10, 0x08,
  0x0c, 0x5a, 0x44, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0x55, 0x14, 0x44,
  0xc4, 0x4e, 0x4e, 0x44, 0xf8, 0xc8, 0x6d, 0x03, 0x61, 0x20, 0x00, 0x00,
  0xd0, 0x01, 0x00, 0x00, 0x13, 0x04, 0x4c, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x04, 0x14, 0x52, 0x21, 0x06, 0x94, 0x51, 0xc9,
  0xcd, 0x00, 0x94, 0x62, 0x40, 0xd9, 0xd5, 0x40, 0x71, 0x06, 0x94, 0x6e,
  0x40, 0xa1, 0x14, 0x68, 0x00, 0x69, 0x45, 0x50, 0x0e, 0x25, 0x40, 0xca,
  0x0c, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc, 0x8d, 0x11, 0xbc, 0x33,
  0x69, 0xa2, 0xbd, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x06,
  0xa1, 0xf0, 0x10, 0x72, 0x20, 0x07, 0x65, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x66, 0x20, 0x0a, 0x50, 0x41, 0x07, 0x74, 0x60, 0x06, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x06, 0xa3, 0x10, 0x19, 0x7c, 0x70,
  0x07, 0x67, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x66, 0x40, 0x0a,
  0xd2, 0x81, 0x07, 0x7e, 0x80, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0x06, 0xa5, 0x30, 0x21, 0xa0, 0x00, 0x0a, 0x69, 0x30, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x66, 0x60, 0x0a, 0x54, 0x02, 0x0a, 0x7f, 0xa0,
  0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x06, 0xa7, 0x50, 0x31,
  0xa1, 0x10, 0x0a, 0x6b, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x57,
  0x2b, 0x40, 0xa2, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x5d, 0x2b,
  0x50, 0xc2, 0x28, 0x8c, 0x26, 0x04, 0xc0, 0x70, 0xc3, 0x10, 0x90, 0xc1,
  0x2c, 0x43, 0xb0, 0x04, 0x25, 0x58, 0x50, 0xc5, 0xc5, 0x25, 0x04, 0x50,
  0x41, 0x01, 0xb3, 0x04, 0xc2, 0x40, 0x05, 0x20, 0x04, 0xad, 0x91, 0x0c,
  0x54, 0x00, 0x38, 0x11, 0xcc, 0x46, 0x32, 0x50, 0x51, 0x06, 0xee, 0x10,
  0xb0, 0x43, 0x32, 0xcb, 0x30, 0x18, 0x41, 0x0d, 0x47, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0x1b, 0xc4, 0x02, 0x19, 0x38, 0x81, 0x2b, 0x8c,
  0x26, 0x04, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0xb8, 0xc1, 0x2c,
  0x98, 0x01, 0x34, 0xa0, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0xb8, 0x01, 0x2e, 0xac, 0x41, 0x85, 0x88, 0xc1, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x70, 0x43, 0x92, 0x0b, 0x60, 0x30, 0xcb, 0x40,
  0x14, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0xb8, 0x01, 0x2f, 0xbc,
  0x41, 0xc6, 0xc0, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x18, 0xc3, 0x68,
  0xc2, 0x21, 0x1c, 0xa3, 0xec, 0x31, 0xca, 0x1e, 0xa3, 0xec, 0x31, 0xca,
  0xde, 0xa2, 0xec, 0x2d, 0xca, 0xde, 0xa1, 0xec, 0x25, 0xca, 0xde, 0xa2,
  0xec, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x8c, 0x41, 0x3b, 0xf4, 0x41,
  0x62, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x18, 0xb8, 0x83, 0x1f,
  0x24, 0xc6, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x8c, 0xc1, 0x3b, 0xfc,
  0x41, 0x62, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x18, 0xc0, 0x03,
  0x28, 0x0c, 0xc6, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x8c, 0x41, 0x3c,
  0x84, 0xc2, 0x60, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x18, 0xc8,
  0x83, 0x28, 0x0c, 0xc6, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x8c, 0xc1,
  0x3c, 0x84, 0xc2, 0xc3, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x18,
  0xd0, 0x83, 0x28, 0x3c, 0xcc, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x8c,
  0x41, 0x3d, 0x8c, 0xc2, 0xc3, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1,
  0x18, 0xd8, 0x03, 0x29, 0x0c, 0xcc, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18,
  0x8c, 0xc1, 0x3d, 0x94, 0xc2, 0xc0, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82,
  0xc1, 0x18, 0xe0, 0x83, 0x29, 0x0c, 0x8c, 0x0d, 0x78, 0x00, 0x1f, 0x1b,
  0xf2, 0x00, 0x3e, 0x36, 0xe8, 0x01, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0x60, 0x0c, 0xf8, 0x81, 0x15, 0x98, 0x61, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0xc6, 0xa0, 0x1f, 0x5a, 0x81, 0x19, 0x46, 0x0c, 0x0e, 0x00,
  0x04, 0xc1, 0x60, 0x0c, 0xfc, 0xc1, 0x15, 0x98, 0xc1, 0x86, 0x04, 0x3e,
  0x36, 0x24, 0xf0, 0xb1, 0x21, 0x81, 0x8f, 0x0d, 0xa2, 0x20, 0x1f, 0x1b,
  0x46, 0x41, 0x3e, 0x36, 0x90, 0x82, 0x7c, 0x6c, 0x78, 0xe2, 0x63, 0x01,
  0x01, 0x1f, 0x23, 0xa0, 0xf8, 0x58, 0x50, 0xc0, 0xc7, 0x8a, 0x28, 0x3e,
  0x16, 0x18, 0xf0, 0x99, 0x25, 0x38, 0x6e, 0x0e, 0x94, 0xbd, 0x39, 0x50,
  0xf6, 0xe6, 0x40, 0xd9, 0x9b, 0x03, 0x65, 0x4f, 0x0e, 0x94, 0x3d, 0x39,
  0x50, 0x76, 0x96, 0xe0, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x37,
  0x68, 0x09, 0x70, 0x60, 0x05, 0x50, 0x10, 0x89, 0xd1, 0x84, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x34, 0x88, 0x09, 0x71, 0x78, 0x85,
  0x80, 0x25, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06,
  0x61, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xd2, 0xa0, 0x26, 0xcc, 0x61,
  0x16, 0x8a, 0x96, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d,
  0x18, 0x84, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x70, 0x83, 0x9b, 0x50,
  0x07, 0x5b, 0x50, 0x05, 0x95, 0x18, 0x4d, 0x08, 0x80, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0x48, 0x83, 0x9d, 0x60, 0x87, 0x5c, 0x08, 0x6c, 0x62,
  0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x20, 0x0d, 0x7e, 0x02, 0x1e, 0x7a, 0xa1, 0xb8,
  0x89, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x31, 0x28, 0x8b, 0x7a, 0x88, 0x8e,
  0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x18, 0x03, 0xb3, 0xb0, 0x87, 0xe8,
  0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x31, 0x38, 0x8b, 0x7b, 0x88,
  0x8e, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x18, 0x03, 0xb4, 0xb0, 0x07,
  0xc8, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x31, 0x48, 0x8b, 0x7b,
  0x80, 0x8c, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x18, 0x03, 0xb5, 0xc0,
  0x07, 0xc8, 0x98, 0x25, 0x38, 0x06, 0x3a, 0x14, 0xc6, 0x50, 0x05, 0x02,
  0x14, 0x8a, 0x81, 0x0e, 0x85, 0x31, 0x50, 0x81, 0x00, 0x85, 0x62, 0xa0,
  0x43, 0x61, 0x0c, 0x53, 0x20, 0x40, 0xa1, 0x18, 0xe8, 0x50, 0x18, 0x03,
  0x1e, 0x08, 0x50, 0x28, 0x06, 0x3a, 0x14, 0xc6, 0x80, 0x07, 0x02, 0x14,
  0x8a, 0x81, 0x0e, 0x85, 0x31, 0xe0, 0x81, 0x00, 0x85, 0x62, 0xc4, 0xa0,
  0x01, 0x40, 0x10, 0x0c, 0xd6, 0xc0, 0x2d, 0xf8, 0xa1, 0x1d, 0xc0, 0x41,
  0x2d, 0x8c, 0x82, 0x90, 0x07, 0x7a, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04,
  0x83, 0x35, 0x70, 0x0b, 0x7e, 0x68, 0x07, 0x70, 0x38, 0x8b, 0x41, 0x08,
  0xe4, 0x81, 0x1e, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x9b, 0x0b,
  0x7b, 0x20, 0x8b, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xe8, 0xe8, 0x62,
  0x1f, 0xd2, 0x41, 0x2d, 0x46, 0x13, 0x82, 0x60, 0xb8, 0x21, 0x1c, 0x02,
  0x32, 0x98, 0x65, 0x48, 0x90, 0x60, 0xa0, 0x01, 0x30, 0x8d, 0x63, 0xc4,
  0x60, 0x01, 0x40, 0x10, 0x0c, 0xc2, 0xc0, 0x2e, 0xfa, 0x41, 0x1e, 0xdc,
  0xc2, 0x2d, 0x42, 0x22, 0x24, 0xde, 0x62, 0xc4, 0xa0, 0x01, 0x40, 0x10,
  0x0c, 0xe0, 0x20, 0x2e, 0x42, 0x82, 0x1e, 0x82, 0xb7, 0x10, 0x44, 0x42,
  0x24, 0x44, 0x02, 0x1f, 0x66, 0x09, 0x96, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x70, 0x03, 0xb9, 0x28, 0x89, 0x78, 0x28, 0x87, 0xb7, 0x18, 0x4d,
  0x08, 0x80, 0x0a, 0xd6, 0xe2, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0x20,
  0x0c, 0xf4, 0x22, 0x24, 0xe6, 0x41, 0x2e, 0x82, 0x92, 0x28, 0x89, 0x73,
  0x18, 0x6e, 0x08, 0xe6, 0x02, 0x0c, 0x4a, 0x48, 0x07, 0x98, 0x65, 0x50,
  0x04, 0x61, 0x96, 0x60, 0xc1, 0x70, 0x20, 0x00, 0xbc, 0x00, 0x00, 0x00,
  0x16, 0xd5, 0x1d, 0x08, 0x11, 0x01, 0x91, 0x70, 0x60, 0x1b, 0x55, 0x14,
  0x44, 0xf4, 0xbb, 0xda, 0xfb, 0x4b, 0x53, 0x44, 0x09, 0x53, 0x40, 0x15,
  0x16, 0x1b, 0x40, 0x7c, 0x26, 0xd2, 0x98, 0x5d, 0xe1, 0x23, 0x34, 0x5e,
  0x5b, 0x5d, 0xe1, 0x23, 0x36, 0x4e, 0x1b, 0x15, 0xd6, 0x46, 0x04, 0xb1,
  0x10, 0x13, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93, 0xf4, 0x0b, 0x01, 0x55,
  0x14, 0x44, 0x64, 0x85, 0x01, 0x85, 0x8f, 0xd0, 0x38, 0x6e, 0x78, 0x85,
  0x8f, 0xd8, 0xf8, 0x6d, 0x98, 0x01, 0x85, 0x8f, 0xd4, 0xfa, 0x6d, 0x8b,
  0x01, 0x85, 0x8f, 0xd0, 0xf8, 0x6e, 0x87, 0x01, 0x85, 0x8f, 0xd8, 0xb8,
  0x6e, 0x9b, 0x01, 0x85, 0x8f, 0xd4, 0xba, 0x6e, 0x8d, 0x01, 0x85, 0x8f,
  0xd8, 0x78, 0x6f, 0xb5, 0x01, 0xc6, 0x67, 0x02, 0x57, 0xdd, 0x1b, 0x6d,
  0x00, 0xf1, 0x99, 0xc0, 0x65, 0xc0, 0x01, 0x51, 0xe3, 0x0c, 0x84, 0xd8,
  0x0c, 0xc4, 0xe5, 0xd3, 0xfe, 0x22, 0x48, 0x12, 0x60, 0x4e, 0x65, 0xb0,
  0x01, 0x12, 0xd1, 0x46, 0x04, 0xb1, 0x10, 0x93, 0x24, 0x36, 0x03, 0x71,
  0x6d, 0x54, 0x51, 0x10, 0xd1, 0xef, 0x6a, 0xef, 0x2f, 0x4d, 0x11, 0x25,
  0x4c, 0x01, 0x55, 0x58, 0x70, 0x40, 0xa2, 0x4d, 0x0e, 0x83, 0x08, 0xda,
  0x30, 0x58, 0x71, 0xc0, 0xa2, 0x4d, 0x0e, 0x83, 0x08, 0xda, 0x30, 0xd4,
  0xb8, 0x39, 0x06, 0x14, 0x3e, 0x42, 0xe7, 0xb4, 0xc9, 0x06, 0x18, 0x9f,
  0x89, 0x34, 0x76, 0x6d, 0xb3, 0x01, 0xc6, 0x67, 0x22, 0x8d, 0x6d, 0x1b,
  0x62, 0x80, 0xf1, 0x99, 0x48, 0x63, 0xdf, 0x96, 0x18, 0x60, 0x7c, 0x26,
  0xd2, 0xd8, 0xb8, 0x29, 0x06, 0x18, 0x9f, 0x89, 0x34, 0x76, 0x6e, 0x92,
  0x01, 0x85, 0x8f, 0xd0, 0xb9, 0x6e, 0x90, 0x01, 0x85, 0x8f, 0xd8, 0xb9,
  0x6d, 0x74, 0x85, 0x8f, 0xd4, 0x77, 0x6f, 0x82, 0x01, 0xc6, 0x67, 0x02,
  0x97, 0xad, 0x9b, 0x65, 0x40, 0xe1, 0x23, 0x76, 0xce, 0xdb, 0x9f, 0xf1,
  0x99, 0xc0, 0x65, 0xf7, 0x36, 0x18, 0x60, 0x7c, 0x26, 0x70, 0xd9, 0xbb,
  0x11, 0x06, 0x18, 0x9f, 0x09, 0x5c, 0x36, 0x6f, 0x93, 0x01, 0x89, 0x8f,
  0xd4, 0x39, 0xee, 0x37, 0x84, 0x61, 0xb9, 0x01, 0x4f, 0xe3, 0x0c, 0x84,
  0xa6, 0x6d, 0x9b, 0x4f, 0xfb, 0xb4, 0x8f, 0xd8, 0x66, 0x1b, 0x60, 0x7c,
  0x26, 0x70, 0xd9, 0xb4, 0xdd, 0x06, 0x3c, 0x8d, 0x33, 0x10, 0x9a, 0xb6,
  0x6d, 0x3e, 0xed, 0xd3, 0x3e, 0x42, 0x1b, 0x6e, 0xc0, 0xd3, 0x38, 0x03,
  0xa1, 0x69, 0xdb, 0xe6, 0xd3, 0x3e, 0xed, 0x23, 0xf5, 0x2d, 0x24, 0xfe,
  0xe2, 0x38, 0x0f, 0x71, 0x21, 0x93, 0x49, 0x75, 0x27, 0xc5, 0xb4, 0x11,
  0x02, 0x34, 0xc6, 0x42, 0x48, 0x1b, 0x55, 0x14, 0x44, 0xf4, 0xbb, 0xda,
  0xfb, 0x47, 0x80, 0x15, 0x50, 0xc5, 0x29, 0x48, 0xfe, 0xe2, 0x38, 0x0f,
  0x71, 0x21, 0x93, 0xbf, 0x38, 0xce, 0x43, 0x5c, 0xc8, 0x64, 0x50, 0x98,
  0xa6, 0x6d, 0xdb, 0x46, 0x15, 0x05, 0x11, 0xfd, 0xae, 0xf6, 0xfe, 0xd2,
  0x14, 0x51, 0xc2, 0x14, 0x50, 0x85, 0xdd, 0x15, 0x3e, 0x52, 0xe3, 0xb6,
  0xf1, 0x19, 0x9f, 0x89, 0x34, 0xb7, 0x6d, 0x80, 0x01, 0xc6, 0x67, 0x02,
  0xd7, 0x4d, 0x5b, 0x9f, 0xf1, 0x99, 0x48, 0x73, 0xdf, 0x96, 0x67, 0x7c,
  0x26, 0xd2, 0xdc, 0xb9, 0xe9, 0x19, 0x9f, 0x89, 0x34, 0xb7, 0x6e, 0x7b,
  0xc6, 0x67, 0x22, 0xcd, 0xbd, 0x1b, 0x63, 0x40, 0xe1, 0x23, 0x35, 0xce,
  0xdb, 0x54, 0x26, 0x36, 0x0f, 0x35, 0x6d, 0x54, 0x51, 0x10, 0xd1, 0xef,
  0x6a, 0xef, 0x2f, 0x4d, 0x11, 0x25, 0x4c, 0x01, 0x55, 0xd8, 0x93, 0x18,
  0x6c, 0x80, 0x44, 0xb4, 0x11, 0x41, 0x2c, 0xc4, 0x24, 0x71, 0x0e, 0xd5,
  0x4c, 0x1b, 0x55, 0x14, 0x44, 0xf4, 0xbb, 0xda, 0xfb, 0x47, 0x80, 0x15,
  0x50, 0x85, 0x79, 0x39, 0x0d, 0xc5, 0xb4, 0x11, 0x02, 0x34, 0xc6, 0x42,
  0x48, 0x3e, 0x6d, 0x97, 0x01, 0x85, 0x8f, 0xd0, 0xba, 0x6d, 0x81, 0x01,
  0xc6, 0x67, 0x02, 0xd7, 0x5d, 0x9b, 0x9f, 0xf1, 0x99, 0x48, 0x73, 0xe3,
  0xd6, 0xb5, 0x34, 0xce, 0x40, 0x88, 0xcd, 0x40, 0x5c, 0x3e, 0x6d, 0x99,
  0x01, 0x85, 0x8f, 0xd8, 0x3a, 0x6e, 0xba, 0x01, 0x4f, 0xe3, 0x0c, 0x84,
  0xa6, 0x6d, 0x9b, 0x5f, 0xfb, 0xb4, 0x8f, 0xd0, 0x66, 0x18, 0x50, 0xf8,
  0x48, 0x8d, 0xe7, 0xa6, 0x19, 0x50, 0xf8, 0x08, 0xad, 0xe7, 0xc6, 0x19,
  0x50, 0xf8, 0x88, 0xad, 0xef, 0xb6, 0x1b, 0xf0, 0x34, 0xce, 0x40, 0x68,
  0xda, 0xb6, 0xf9, 0xb5, 0x4f, 0xfb, 0x48, 0x6d, 0x70, 0x83, 0x8f, 0xd0,
  0x16, 0x37, 0xf8, 0x48, 0x6d, 0x72, 0x83, 0x8f, 0xd8, 0xf6, 0x18, 0x50,
  0xf8, 0x48, 0x9d, 0xd7, 0xf6, 0x85, 0x20, 0x52, 0x49, 0x00, 0x85, 0x4f,
  0xdb, 0x5c, 0xe1, 0x23, 0xf4, 0xcd, 0x1b, 0x65, 0x40, 0xe1, 0x23, 0x75,
  0xbe, 0x1b, 0x6f, 0xc0, 0xd3, 0x38, 0x03, 0xa1, 0x69, 0xdb, 0xe6, 0xd7,
  0x3e, 0xed, 0x23, 0xb6, 0x45, 0x06, 0x24, 0x3e, 0x42, 0xe7, 0xb7, 0xdf,
  0x10, 0x86, 0x55, 0x06, 0x24, 0x3e, 0x62, 0xe7, 0xb9, 0xdf, 0x10, 0x06,
  0xe9, 0xc0, 0x0c, 0x02, 0x7e, 0x86, 0xde, 0xda, 0xe0, 0xea, 0xe8, 0xca,
  0x98, 0xca, 0xc2, 0xcc, 0x82, 0x82, 0x84, 0x84, 0x80, 0x80, 0xb2, 0x82,
  0x7e, 0x82, 0xaa, 0x82, 0x82, 0x84, 0x84, 0x80, 0x80, 0x92, 0x80, 0xb4,
  0x5c, 0xca, 0xf0, 0xd2, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
