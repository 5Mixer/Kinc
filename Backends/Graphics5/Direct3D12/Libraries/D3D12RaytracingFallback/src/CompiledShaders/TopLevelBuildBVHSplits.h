#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer ConstructHierarchyConstants
; {
;
;   struct ConstructHierarchyConstants
;   {
;
;       struct struct.InputConstants
;       {
;
;           uint NumberOfElements;                    ; Offset:    0
;       
;       } Constants                                   ; Offset:    0
;
;   
;   } ConstructHierarchyConstants                     ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for mortonCodes
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for hierarchyBuffer
; {
;
;   struct struct.HierarchyNode
;   {
;
;       uint ParentIndex;                             ; Offset:    0
;       uint LeftChildIndex;                          ; Offset:    4
;       uint RightChildIndex;                         ; Offset:    8
;   
;   } $Element;                                       ; Offset:    0 Size:    12
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; ConstructHierarchyConstants       cbuffer      NA          NA     CB0            cb0     1
; mortonCodes                           UAV  struct         r/w      U0             u0     1
; hierarchyBuffer                       UAV  struct         r/w      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%"class.RWStructuredBuffer<unsigned int>" = type { i32 }
%"class.RWStructuredBuffer<HierarchyNode>" = type { %struct.HierarchyNode }
%struct.HierarchyNode = type { i32, i32, i32 }
%ConstructHierarchyConstants = type { %struct.InputConstants }
%struct.InputConstants = type { i32 }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%struct.RWByteAddressBuffer = type { i32 }

@"\01?mortonCodes@@3V?$RWStructuredBuffer@I@@A" = external constant %"class.RWStructuredBuffer<unsigned int>", align 4
@"\01?hierarchyBuffer@@3V?$RWStructuredBuffer@UHierarchyNode@@@@A" = external constant %"class.RWStructuredBuffer<HierarchyNode>", align 4
@ConstructHierarchyConstants = external constant %ConstructHierarchyConstants

define void @main() {
  %hierarchyBuffer_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %mortonCodes_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %ConstructHierarchyConstants_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %2 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %ConstructHierarchyConstants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %3 = extractvalue %dx.types.CBufRet.i32 %2, 0
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %1, %4
  br i1 %5, label %6, label %162

; <label>:6                                       ; preds = %0
  %7 = add i32 %1, 1
  %8 = icmp uge i32 %1, %3
  %9 = icmp uge i32 %7, %3
  %10 = or i1 %8, %9
  br i1 %10, label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.i", label %11

; <label>:11                                      ; preds = %6
  %12 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %1, i32 0)  ; BufferLoad(srv,index,wot)
  %13 = extractvalue %dx.types.ResRet.i32 %12, 0
  %14 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %7, i32 0)  ; BufferLoad(srv,index,wot)
  %15 = extractvalue %dx.types.ResRet.i32 %14, 0
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %21, label %17

; <label>:17                                      ; preds = %11
  %18 = xor i32 %15, %13
  %FirstbitHi = call i32 @dx.op.unaryBits.i32(i32 33, i32 %18)  ; FirstbitHi(value)
  %19 = icmp eq i32 %FirstbitHi, -1
  %20 = select i1 %19, i32 32, i32 %FirstbitHi
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.i"

; <label>:21                                      ; preds = %11
  %22 = xor i32 %7, %1
  %FirstbitHi48 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %22)  ; FirstbitHi(value)
  %23 = icmp eq i32 %FirstbitHi48, -1
  %FirstbitHi48.op = add i32 %FirstbitHi48, 31
  %24 = select i1 %23, i32 63, i32 %FirstbitHi48.op
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.i"

"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.i":   ; preds = %21, %17, %6
  %.0 = phi i32 [ %20, %17 ], [ %24, %21 ], [ -1, %6 ]
  %25 = add i32 %1, -1
  %26 = icmp uge i32 %25, %3
  %27 = or i1 %8, %26
  br i1 %27, label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.i", label %28

; <label>:28                                      ; preds = %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.i"
  %29 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %1, i32 0)  ; BufferLoad(srv,index,wot)
  %30 = extractvalue %dx.types.ResRet.i32 %29, 0
  %31 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %25, i32 0)  ; BufferLoad(srv,index,wot)
  %32 = extractvalue %dx.types.ResRet.i32 %31, 0
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %38, label %34

; <label>:34                                      ; preds = %28
  %35 = xor i32 %32, %30
  %FirstbitHi36 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %35)  ; FirstbitHi(value)
  %36 = icmp eq i32 %FirstbitHi36, -1
  %37 = select i1 %36, i32 32, i32 %FirstbitHi36
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.i"

; <label>:38                                      ; preds = %28
  %39 = xor i32 %25, %1
  %FirstbitHi47 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %39)  ; FirstbitHi(value)
  %40 = icmp eq i32 %FirstbitHi47, -1
  %FirstbitHi47.op = add i32 %FirstbitHi47, 31
  %41 = select i1 %40, i32 63, i32 %FirstbitHi47.op
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.i"

"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.i":  ; preds = %38, %34, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.i"
  %.01 = phi i32 [ %37, %34 ], [ %41, %38 ], [ -1, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.i" ]
  %42 = sub nsw i32 %.0, %.01
  %IMax = call i32 @dx.op.binary.i32(i32 37, i32 %42, i32 -1)  ; IMax(a,b)
  %IMin = call i32 @dx.op.binary.i32(i32 38, i32 %IMax, i32 1)  ; IMin(a,b)
  %43 = sub i32 %1, %IMin
  %44 = icmp uge i32 %43, %3
  %45 = or i1 %8, %44
  br i1 %45, label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit6.i.i", label %46

; <label>:46                                      ; preds = %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.i"
  %47 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %1, i32 0)  ; BufferLoad(srv,index,wot)
  %48 = extractvalue %dx.types.ResRet.i32 %47, 0
  %49 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %43, i32 0)  ; BufferLoad(srv,index,wot)
  %50 = extractvalue %dx.types.ResRet.i32 %49, 0
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %56, label %52

; <label>:52                                      ; preds = %46
  %53 = xor i32 %50, %48
  %FirstbitHi37 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %53)  ; FirstbitHi(value)
  %54 = icmp eq i32 %FirstbitHi37, -1
  %55 = select i1 %54, i32 32, i32 %FirstbitHi37
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit6.i.i"

; <label>:56                                      ; preds = %46
  %57 = xor i32 %43, %1
  %FirstbitHi46 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %57)  ; FirstbitHi(value)
  %58 = icmp eq i32 %FirstbitHi46, -1
  %FirstbitHi46.op = add i32 %FirstbitHi46, 31
  %59 = select i1 %58, i32 63, i32 %FirstbitHi46.op
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit6.i.i"

"\01?GetLongestCommonPrefix@@YAHII@Z.exit6.i.i":  ; preds = %56, %52, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.i"
  %.02 = phi i32 [ %55, %52 ], [ %59, %56 ], [ -1, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.i" ]
  br label %60

; <label>:60                                      ; preds = %"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i", %"\01?GetLongestCommonPrefix@@YAHII@Z.exit6.i.i"
  %maxLength.i.i.0 = phi i32 [ 2, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit6.i.i" ], [ %80, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i" ]
  %61 = mul nsw i32 %maxLength.i.i.0, %IMin
  %62 = add i32 %61, %1
  %63 = icmp uge i32 %62, %3
  %64 = or i1 %8, %63
  br i1 %64, label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i", label %65

; <label>:65                                      ; preds = %60
  %66 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %1, i32 0)  ; BufferLoad(srv,index,wot)
  %67 = extractvalue %dx.types.ResRet.i32 %66, 0
  %68 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %62, i32 0)  ; BufferLoad(srv,index,wot)
  %69 = extractvalue %dx.types.ResRet.i32 %68, 0
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %75, label %71

; <label>:71                                      ; preds = %65
  %72 = xor i32 %69, %67
  %FirstbitHi38 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %72)  ; FirstbitHi(value)
  %73 = icmp eq i32 %FirstbitHi38, -1
  %74 = select i1 %73, i32 32, i32 %FirstbitHi38
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i"

; <label>:75                                      ; preds = %65
  %76 = xor i32 %62, %1
  %FirstbitHi45 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %76)  ; FirstbitHi(value)
  %77 = icmp eq i32 %FirstbitHi45, -1
  %FirstbitHi45.op = add i32 %FirstbitHi45, 31
  %78 = select i1 %77, i32 63, i32 %FirstbitHi45.op
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i"

"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i":  ; preds = %75, %71, %60
  %.04 = phi i32 [ %74, %71 ], [ %78, %75 ], [ -1, %60 ]
  %79 = icmp sgt i32 %.04, %.02
  %80 = shl nsw i32 %maxLength.i.i.0, 2
  br i1 %79, label %60, label %81

; <label>:81                                      ; preds = %"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i"
  %maxLength.i.i.0.lcssa = phi i32 [ %maxLength.i.i.0, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit9.i.i" ]
  %82 = icmp sgt i32 %maxLength.i.i.0.lcssa, 1
  br i1 %82, label %.lr.ph.preheader, label %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i"

.lr.ph.preheader:                                 ; preds = %81
  br label %.lr.ph

.lr.ph:                                           ; preds = %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i", %.lr.ph.preheader
  %t.i.i.08.in = phi i32 [ %t.i.i.08, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i" ], [ %maxLength.i.i.0.lcssa, %.lr.ph.preheader ]
  %length.i.i.07 = phi i32 [ %.length.i.i.07, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i" ], [ 0, %.lr.ph.preheader ]
  %t.i.i.08 = sdiv i32 %t.i.i.08.in, 2
  %83 = add nsw i32 %t.i.i.08, %length.i.i.07
  %84 = mul nsw i32 %83, %IMin
  %85 = add i32 %84, %1
  %86 = icmp uge i32 %85, %3
  %87 = or i1 %8, %86
  br i1 %87, label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i", label %88

; <label>:88                                      ; preds = %.lr.ph
  %89 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %1, i32 0)  ; BufferLoad(srv,index,wot)
  %90 = extractvalue %dx.types.ResRet.i32 %89, 0
  %91 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %85, i32 0)  ; BufferLoad(srv,index,wot)
  %92 = extractvalue %dx.types.ResRet.i32 %91, 0
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %98, label %94

; <label>:94                                      ; preds = %88
  %95 = xor i32 %92, %90
  %FirstbitHi39 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %95)  ; FirstbitHi(value)
  %96 = icmp eq i32 %FirstbitHi39, -1
  %97 = select i1 %96, i32 32, i32 %FirstbitHi39
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i"

; <label>:98                                      ; preds = %88
  %99 = xor i32 %85, %1
  %FirstbitHi40 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %99)  ; FirstbitHi(value)
  %100 = icmp eq i32 %FirstbitHi40, -1
  %FirstbitHi40.op = add i32 %FirstbitHi40, 31
  %101 = select i1 %100, i32 63, i32 %FirstbitHi40.op
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i"

"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i": ; preds = %98, %94, %.lr.ph
  %.05 = phi i32 [ %97, %94 ], [ %101, %98 ], [ -1, %.lr.ph ]
  %102 = icmp sgt i32 %.05, %.02
  %103 = select i1 %102, i32 %t.i.i.08, i32 0
  %.length.i.i.07 = add nsw i32 %103, %length.i.i.07
  %104 = icmp sgt i32 %t.i.i.08.in, 3
  br i1 %104, label %.lr.ph, label %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i.loopexit"

"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i.loopexit": ; preds = %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i"
  %.length.i.i.07.lcssa = phi i32 [ %.length.i.i.07, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit12.i.i" ]
  br label %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i"

"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i": ; preds = %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i.loopexit", %81
  %length.i.i.0.lcssa = phi i32 [ 0, %81 ], [ %.length.i.i.07.lcssa, %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i.loopexit" ]
  %105 = mul nsw i32 %length.i.i.0.lcssa, %IMin
  %106 = add i32 %105, %1
  %UMin = call i32 @dx.op.binary.i32(i32 40, i32 %1, i32 %106)  ; UMin(a,b)
  %UMax = call i32 @dx.op.binary.i32(i32 39, i32 %1, i32 %106)  ; UMax(a,b)
  %107 = icmp uge i32 %UMin, %3
  %108 = icmp uge i32 %UMax, %3
  %109 = or i1 %107, %108
  br i1 %109, label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.5.i", label %110

; <label>:110                                     ; preds = %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i"
  %111 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %UMin, i32 0)  ; BufferLoad(srv,index,wot)
  %112 = extractvalue %dx.types.ResRet.i32 %111, 0
  %113 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %UMax, i32 0)  ; BufferLoad(srv,index,wot)
  %114 = extractvalue %dx.types.ResRet.i32 %113, 0
  %115 = icmp eq i32 %112, %114
  br i1 %115, label %120, label %116

; <label>:116                                     ; preds = %110
  %117 = xor i32 %114, %112
  %FirstbitHi41 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %117)  ; FirstbitHi(value)
  %118 = icmp eq i32 %FirstbitHi41, -1
  %119 = select i1 %118, i32 32, i32 %FirstbitHi41
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.5.i"

; <label>:120                                     ; preds = %110
  %121 = xor i32 %UMax, %UMin
  %FirstbitHi44 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %121)  ; FirstbitHi(value)
  %122 = icmp eq i32 %FirstbitHi44, -1
  %FirstbitHi44.op = add i32 %FirstbitHi44, 31
  %123 = select i1 %122, i32 63, i32 %FirstbitHi44.op
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.5.i"

"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.5.i": ; preds = %120, %116, %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i"
  %.06 = phi i32 [ %119, %116 ], [ %123, %120 ], [ -1, %"\01?DetermineRange@@YA?AV?$vector@I$01@@I@Z.exit.i" ]
  %124 = sub i32 %UMax, %UMin
  br label %125

; <label>:125                                     ; preds = %151, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.5.i"
  %split.i.i.0 = phi i32 [ %UMin, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.5.i" ], [ %split.i.i.1, %151 ]
  %step.i.i.0 = phi i32 [ %124, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit.i.5.i" ], [ %127, %151 ]
  %126 = add nsw i32 %step.i.i.0, 1
  %127 = ashr i32 %126, 1
  %128 = add nsw i32 %127, %split.i.i.0
  %129 = icmp ult i32 %128, %UMax
  br i1 %129, label %130, label %151

; <label>:130                                     ; preds = %125
  %131 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %ConstructHierarchyConstants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %132 = extractvalue %dx.types.CBufRet.i32 %131, 0
  %133 = icmp uge i32 %UMin, %132
  %134 = icmp uge i32 %128, %132
  %135 = or i1 %133, %134
  br i1 %135, label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.6.i", label %136

; <label>:136                                     ; preds = %130
  %137 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %UMin, i32 0)  ; BufferLoad(srv,index,wot)
  %138 = extractvalue %dx.types.ResRet.i32 %137, 0
  %139 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %mortonCodes_UAV_structbuf, i32 %128, i32 0)  ; BufferLoad(srv,index,wot)
  %140 = extractvalue %dx.types.ResRet.i32 %139, 0
  %141 = icmp eq i32 %138, %140
  br i1 %141, label %146, label %142

; <label>:142                                     ; preds = %136
  %143 = xor i32 %140, %138
  %FirstbitHi42 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %143)  ; FirstbitHi(value)
  %144 = icmp eq i32 %FirstbitHi42, -1
  %145 = select i1 %144, i32 32, i32 %FirstbitHi42
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.6.i"

; <label>:146                                     ; preds = %136
  %147 = xor i32 %128, %UMin
  %FirstbitHi43 = call i32 @dx.op.unaryBits.i32(i32 33, i32 %147)  ; FirstbitHi(value)
  %148 = icmp eq i32 %FirstbitHi43, -1
  %FirstbitHi43.op = add i32 %FirstbitHi43, 31
  %149 = select i1 %148, i32 63, i32 %FirstbitHi43.op
  br label %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.6.i"

"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.6.i": ; preds = %146, %142, %130
  %.03 = phi i32 [ %145, %142 ], [ %149, %146 ], [ -1, %130 ]
  %150 = icmp sgt i32 %.03, %.06
  %.split.i.i.0 = select i1 %150, i32 %128, i32 %split.i.i.0
  br label %151

; <label>:151                                     ; preds = %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.6.i", %125
  %split.i.i.1 = phi i32 [ %split.i.i.0, %125 ], [ %.split.i.i.0, %"\01?GetLongestCommonPrefix@@YAHII@Z.exit3.i.6.i" ]
  %152 = icmp sgt i32 %127, 1
  br i1 %152, label %125, label %"\01?FindSplit@@YAHHI@Z.exit.i"

"\01?FindSplit@@YAHHI@Z.exit.i":                  ; preds = %151
  %split.i.i.1.lcssa = phi i32 [ %split.i.i.1, %151 ]
  %153 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %ConstructHierarchyConstants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %154 = extractvalue %dx.types.CBufRet.i32 %153, 0
  %155 = add i32 %154, -1
  %156 = icmp eq i32 %split.i.i.1.lcssa, %UMin
  %157 = select i1 %156, i32 %155, i32 0
  %childAIndex.i.0 = add i32 %157, %split.i.i.1.lcssa
  %158 = add i32 %split.i.i.1.lcssa, 1
  %159 = icmp eq i32 %158, %UMax
  %160 = select i1 %159, i32 %155, i32 0
  %161 = add i32 %158, %160
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %hierarchyBuffer_UAV_structbuf, i32 %1, i32 4, i32 %childAIndex.i.0, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %hierarchyBuffer_UAV_structbuf, i32 %1, i32 8, i32 %161, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %hierarchyBuffer_UAV_structbuf, i32 %childAIndex.i.0, i32 0, i32 %1, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  call void @dx.op.bufferStore.i32(i32 69, %dx.types.Handle %hierarchyBuffer_UAV_structbuf, i32 %161, i32 0, i32 %1, i32 undef, i32 undef, i32 undef, i8 1)  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  br label %162

; <label>:162                                     ; preds = %"\01?FindSplit@@YAHHI@Z.exit.i", %0
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.unaryBits.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.bufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!12, !27}
!dx.entryPoints = !{!31}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 3}
!3 = !{!"cs", i32 6, i32 0}
!4 = !{null, !5, !10, null}
!5 = !{!6, !8}
!6 = !{i32 0, %"class.RWStructuredBuffer<unsigned int>"* undef, !"mortonCodes", i32 0, i32 0, i32 1, i32 12, i1 false, i1 false, i1 false, !7}
!7 = !{i32 1, i32 4}
!8 = !{i32 1, %"class.RWStructuredBuffer<HierarchyNode>"* undef, !"hierarchyBuffer", i32 0, i32 1, i32 1, i32 12, i1 false, i1 false, i1 false, !9}
!9 = !{i32 1, i32 12}
!10 = !{!11}
!11 = !{i32 0, %ConstructHierarchyConstants* undef, !"ConstructHierarchyConstants", i32 0, i32 0, i32 1, i32 4, null}
!12 = !{i32 0, %"class.RWStructuredBuffer<unsigned int>" undef, !13, %"class.RWStructuredBuffer<HierarchyNode>" undef, !15, %struct.HierarchyNode undef, !17, %struct.RWByteAddressBuffer undef, !21, %struct.InputConstants undef, !23, %ConstructHierarchyConstants undef, !25}
!13 = !{i32 4, !14}
!14 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 5}
!15 = !{i32 12, !16}
!16 = !{i32 6, !"h", i32 3, i32 0}
!17 = !{i32 12, !18, !19, !20}
!18 = !{i32 6, !"ParentIndex", i32 3, i32 0, i32 7, i32 5}
!19 = !{i32 6, !"LeftChildIndex", i32 3, i32 4, i32 7, i32 5}
!20 = !{i32 6, !"RightChildIndex", i32 3, i32 8, i32 7, i32 5}
!21 = !{i32 4, !22}
!22 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!23 = !{i32 4, !24}
!24 = !{i32 6, !"NumberOfElements", i32 3, i32 0, i32 7, i32 5}
!25 = !{i32 4, !26}
!26 = !{i32 6, !"Constants", i32 3, i32 0}
!27 = !{i32 1, void ()* @main, !28}
!28 = !{!29}
!29 = !{i32 0, !30, !30}
!30 = !{}
!31 = !{void ()* @main, !"main", null, !4, !32}
!32 = !{i32 0, i64 16, i32 4, !33}
!33 = !{i32 64, i32 1, i32 1}

#endif

const unsigned char g_pTopLevelBuildBVHSplits[] = {
  0x44, 0x58, 0x42, 0x43, 0x13, 0xef, 0x8b, 0xe9, 0xec, 0x8e, 0xb4, 0x97,
  0x8f, 0xae, 0xa7, 0x7b, 0xeb, 0x9c, 0x24, 0x35, 0x01, 0x00, 0x00, 0x00,
  0xa0, 0x12, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0xd8, 0x00, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x6c, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0xc0, 0x11, 0x00, 0x00, 0x60, 0x00, 0x05, 0x00,
  0x70, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xa8, 0x11, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff,
  0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x88, 0xc1, 0x1c, 0x01, 0x18, 0xcc, 0x64, 0x06, 0xe3, 0xc0, 0x0e,
  0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70, 0x0b, 0xb3, 0x40, 0x0f,
  0xf2, 0x50, 0x0f, 0xe3, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x40, 0x0e,
  0xa2, 0x50, 0x0f, 0xe6, 0x60, 0x0e, 0xe5, 0x20, 0x0f, 0x7c, 0x50, 0x0f,
  0xee, 0x30, 0x0f, 0xe9, 0x70, 0x0e, 0xee, 0x50, 0x0e, 0xe4, 0x00, 0x06,
  0xe9, 0xe0, 0x0e, 0xf4, 0xe0, 0x07, 0x28, 0x00, 0x28, 0x38, 0x4a, 0x9a,
  0x22, 0x4a, 0x98, 0xfc, 0x10, 0x21, 0x22, 0x20, 0x12, 0x0e, 0xec, 0x74,
  0x06, 0x02, 0x0d, 0x00, 0x00, 0xcc, 0x74, 0x06, 0xe3, 0xc0, 0x0e, 0xe1,
  0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70, 0x0b, 0xb3, 0x40, 0x0f, 0xf2,
  0x50, 0x0f, 0xe3, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x40, 0x0e, 0xa2,
  0x50, 0x0f, 0xe6, 0x60, 0x0e, 0xe5, 0x20, 0x0f, 0x7c, 0x80, 0x0a, 0xe9,
  0x50, 0x0e, 0xf2, 0x10, 0x0e, 0xf2, 0x30, 0x0e, 0xe8, 0x90, 0x0f, 0xae,
  0xf0, 0x0e, 0xe4, 0x50, 0x0e, 0x7e, 0x80, 0x82, 0x81, 0x88, 0xab, 0xa4,
  0x29, 0xa2, 0x84, 0xc9, 0x17, 0x9b, 0x87, 0x9a, 0x38, 0xa7, 0x91, 0x26,
  0xa0, 0x99, 0x24, 0x14, 0x00, 0xb7, 0x71, 0x4e, 0x23, 0x4d, 0x11, 0x25,
  0x4c, 0x21, 0x42, 0x44, 0x40, 0x24, 0x1c, 0x18, 0xe7, 0x34, 0xd2, 0x04,
  0x34, 0x93, 0x84, 0x02, 0x83, 0x8e, 0x11, 0x80, 0x12, 0x24, 0xa4, 0x94,
  0x01, 0x00, 0x00, 0x62, 0x8e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2,
  0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x91, 0xdb, 0x46, 0x04, 0x00, 0x00,
  0xc0, 0x1c, 0x01, 0x42, 0xcf, 0x3d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48,
  0x7e, 0x08, 0x34, 0xc3, 0x42, 0xa0, 0x00, 0x2a, 0x84, 0x03, 0x44, 0x00,
  0x49, 0x85, 0x00, 0x00, 0x00, 0x20, 0x6a, 0x8e, 0x20, 0x28, 0x46, 0x04,
  0x3c, 0x00, 0x60, 0xd1, 0x75, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0xa8, 0x00, 0x00, 0x00,
  0x00, 0x4a, 0x91, 0x01, 0x11, 0x00, 0x90, 0x56, 0x94, 0x04, 0x88, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x21, 0x6e, 0x20, 0xe0, 0x34, 0x69, 0x8a, 0x28,
  0x61, 0xf2, 0x57, 0x78, 0xc3, 0x26, 0x42, 0x1b, 0x86, 0x88, 0x90, 0xa4,
  0x8d, 0x2a, 0x0a, 0x22, 0x42, 0x01, 0x30, 0x47, 0x00, 0x0a, 0x53, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0x64, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x66, 0x00, 0xc0, 0xe4, 0x00,
  0x80, 0xf9, 0x01, 0x00, 0x0c, 0x79, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x30, 0x40, 0x00, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x91, 0x80, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x43, 0x01, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x01,
  0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf,
  0x05, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x1e, 0x0d, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x86, 0x3c, 0x1c, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x64, 0x81, 0x00, 0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0x60, 0x04, 0xa0, 0x0c, 0x8a, 0xa1, 0x30, 0x0a, 0xa1, 0x1c, 0x4a,
  0xa1, 0x20, 0x0a, 0x30, 0x80, 0xc0, 0x02, 0x21, 0x6b, 0x04, 0x80, 0x86,
  0x19, 0x00, 0x22, 0x66, 0x00, 0xa8, 0x98, 0x01, 0x20, 0x63, 0x06, 0x80,
  0x8e, 0x19, 0x00, 0x42, 0x66, 0x00, 0x48, 0x98, 0x01, 0xa0, 0x6f, 0x06,
  0x80, 0x82, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x87, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10,
  0x80, 0x65, 0x82, 0x00, 0x30, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x00, 0xcd,
  0x06, 0x61, 0x30, 0x28, 0x8c, 0xcd, 0x4d, 0x10, 0x00, 0x67, 0xc3, 0x80,
  0x24, 0xc4, 0x04, 0x41, 0xe8, 0xb8, 0xb4, 0xbd, 0xc9, 0xd1, 0xbd, 0xb9,
  0x0d, 0xbd, 0x91, 0x95, 0xcd, 0x4d, 0x10, 0x80, 0x67, 0x82, 0x60, 0x59,
  0x13, 0x04, 0x00, 0xda, 0x20, 0x0c, 0xcf, 0x86, 0x85, 0x58, 0x18, 0x82,
  0x18, 0x1a, 0xc7, 0x71, 0xa0, 0x09, 0x42, 0x91, 0xf1, 0x41, 0x4b, 0x2b,
  0x93, 0x0b, 0x93, 0x1b, 0x43, 0xcb, 0x13, 0xaa, 0x33, 0x33, 0x2b, 0x93,
  0xdb, 0x20, 0x0c, 0xcd, 0x86, 0x65, 0x90, 0x26, 0x62, 0x18, 0x1a, 0xc7,
  0x71, 0xa8, 0x0d, 0x42, 0x54, 0x4d, 0x10, 0x10, 0x8e, 0xdb, 0xd0, 0x9b,
  0xdb, 0x1c, 0x9d, 0x5c, 0xdd, 0x18, 0x1d, 0x52, 0x5a, 0x99, 0x5c, 0x98,
  0xdc, 0x18, 0x5a, 0xde, 0xd0, 0x9b, 0xdb, 0x1c, 0x5d, 0x98, 0x1b, 0xdd,
  0xdc, 0x06, 0x84, 0xb8, 0x30, 0x82, 0x18, 0x1e, 0x60, 0x43, 0x90, 0x6d,
  0x20, 0x00, 0x4b, 0x03, 0x26, 0x08, 0xc1, 0xc7, 0x00, 0x6d, 0x82, 0x00,
  0x44, 0x13, 0x04, 0x40, 0xda, 0x60, 0x24, 0x9d, 0x41, 0x78, 0xdf, 0x06,
  0xe1, 0x01, 0x83, 0x09, 0x02, 0x81, 0x6d, 0x20, 0x92, 0xce, 0x20, 0x36,
  0x08, 0xcd, 0x18, 0x4c, 0x10, 0x86, 0x8b, 0x0b, 0x54, 0x98, 0x5c, 0x99,
  0x1b, 0x5d, 0x92, 0x1b, 0x59, 0x19, 0xde, 0x06, 0x23, 0x31, 0x03, 0x83,
  0xf0, 0x3e, 0x3a, 0x4c, 0x65, 0x66, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64,
  0x49, 0x6e, 0x64, 0x65, 0x78, 0x1b, 0x8c, 0x04, 0x0d, 0x8c, 0xc7, 0xfb,
  0xf8, 0x48, 0xa5, 0x9d, 0xa1, 0xd1, 0x0d, 0xa1, 0xa5, 0xb1, 0x91, 0x25,
  0xb9, 0x91, 0x95, 0xe1, 0x4d, 0x10, 0x80, 0x69, 0x83, 0x91, 0xa8, 0x81,
  0xb1, 0x06, 0xde, 0xb7, 0x81, 0x68, 0xce, 0x20, 0x0d, 0xd8, 0x60, 0x82,
  0xf0, 0x79, 0x1b, 0x8c, 0xa4, 0x33, 0x08, 0xef, 0xd9, 0x20, 0x3c, 0x6f,
  0x30, 0x41, 0x30, 0x34, 0x42, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
  0x66, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1b, 0x8c, 0x44,
  0x0e, 0x0c, 0xc2, 0xfb, 0x36, 0x08, 0xcf, 0x1c, 0x4c, 0x10, 0x8e, 0x8d,
  0xc9, 0xd0, 0x9b, 0xdb, 0x1c, 0x5d, 0x98, 0x1b, 0xdd, 0xdc, 0x06, 0x22,
  0xb1, 0x03, 0x83, 0xd8, 0x20, 0x3c, 0x77, 0xb0, 0xa1, 0x21, 0xb8, 0x30,
  0x10, 0x03, 0x32, 0x28, 0x83, 0x36, 0x70, 0x03, 0x38, 0x88, 0x03, 0x3a,
  0xa8, 0x03, 0x3c, 0x98, 0x20, 0x2c, 0xc3, 0x06, 0x60, 0xc3, 0x40, 0xec,
  0xc1, 0x1e, 0x6c, 0x08, 0xf8, 0x60, 0xc3, 0x30, 0xe8, 0x41, 0x1f, 0x90,
  0x68, 0x0b, 0x4b, 0x73, 0x9b, 0x20, 0x80, 0x41, 0x35, 0x41, 0x00, 0xa8,
  0x0d, 0x43, 0x28, 0x0c, 0xc3, 0x06, 0x82, 0x00, 0x85, 0x47, 0x14, 0x36,
  0x14, 0x7a, 0xf0, 0x07, 0xc0, 0x36, 0x0a, 0x55, 0xd8, 0xd8, 0xec, 0xda,
  0x5c, 0xd2, 0xc8, 0xca, 0xdc, 0xe8, 0xa6, 0x04, 0x41, 0x15, 0x32, 0x3c,
  0x17, 0xbb, 0x32, 0xb9, 0xb9, 0xb4, 0x37, 0xb7, 0x29, 0x01, 0xd1, 0x84,
  0x0c, 0xcf, 0xc5, 0x2e, 0x8c, 0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x60, 0xd4,
  0x21, 0xc3, 0x73, 0x99, 0x43, 0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23,
  0x2b, 0x63, 0x9b, 0x12, 0x24, 0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6,
  0xde, 0xea, 0xe4, 0xc6, 0xca, 0xe6, 0xa6, 0x04, 0x5a, 0x25, 0x32, 0x3c,
  0x17, 0xba, 0x3c, 0xb8, 0xb2, 0x20, 0x37, 0xb7, 0x37, 0xba, 0x30, 0xba,
  0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x02, 0x1e, 0xf4, 0x41, 0x1d, 0x32, 0x3c,
  0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9,
  0x29, 0xc1, 0x28, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72,
  0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70,
  0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72,
  0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
  0x56, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x23, 0xb7, 0x6d, 0x07,
  0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x1b, 0x32, 0x49,
  0x3e, 0x72, 0xdb, 0x86, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11,
  0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84, 0x11, 0x48, 0xc3, 0xe5, 0x3b,
  0x8f, 0x3f, 0x1d, 0x11, 0x01, 0x0c, 0xe2, 0xe0, 0x23, 0xb7, 0x5d, 0x00,
  0x6a, 0x10, 0xf8, 0xb5, 0xdf, 0x72, 0xfa, 0xdb, 0x3d, 0x7c, 0x93, 0xcb,
  0x73, 0x20, 0x70, 0x66, 0xfd, 0x91, 0xa4, 0xd7, 0x29, 0x5d, 0x5e, 0x1f,
  0xd3, 0xeb, 0xf2, 0x32, 0x59, 0x58, 0x37, 0x9b, 0xcb, 0x72, 0x60, 0x12,
  0x08, 0x0c, 0x9a, 0xc0, 0xc6, 0x39, 0x8d, 0x34, 0x45, 0x94, 0x30, 0x85,
  0x08, 0x11, 0x01, 0x91, 0x70, 0x60, 0x9c, 0xd3, 0x48, 0x13, 0xd0, 0x4c,
  0x92, 0x0d, 0x10, 0x0c, 0x80, 0x34, 0x96, 0x40, 0x0d, 0x97, 0xef, 0x3c,
  0x7e, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0xf8, 0xc8, 0x6d, 0x57,
  0x40, 0x1f, 0x04, 0x7e, 0xe8, 0x74, 0x59, 0x1e, 0x96, 0x8f, 0xd1, 0x79,
  0x61, 0xdd, 0x6c, 0x2e, 0xcb, 0x81, 0xc0, 0x99, 0xf5, 0x47, 0x92, 0x5e,
  0xa7, 0x74, 0x79, 0x7d, 0x4c, 0xaf, 0xcb, 0xcb, 0x64, 0x61, 0xdd, 0x6c,
  0x2e, 0xcb, 0x81, 0x55, 0x64, 0xba, 0x2c, 0x0f, 0xcb, 0xc7, 0xe8, 0xbc,
  0xf3, 0x4d, 0x2e, 0x03, 0x81, 0x40, 0x60, 0xd0, 0x0c, 0xa0, 0xe1, 0xf2,
  0x9d, 0xc7, 0x0f, 0x90, 0x06, 0x88, 0x30, 0x1f, 0xb9, 0x6d, 0x53, 0xa8,
  0x86, 0xcb, 0x77, 0x1e, 0x3f, 0xa0, 0x8a, 0x82, 0x88, 0xd8, 0xc9, 0x89,
  0x08, 0x1f, 0xb9, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x75, 0x02, 0x00, 0x00, 0x13, 0x04, 0x69, 0x10, 0x0b, 0x04, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x04, 0xd4, 0x40, 0x21, 0x06, 0x94, 0xd0, 0x0c,
  0x40, 0x01, 0x95, 0x4f, 0xf9, 0x95, 0x62, 0x40, 0xc9, 0x95, 0x5d, 0x11,
  0x94, 0x6e, 0x40, 0x29, 0x15, 0x53, 0x41, 0x95, 0x13, 0x3d, 0x25, 0x50,
  0x04, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x70, 0xa9,
  0x81, 0x22, 0x9c, 0xc1, 0x19, 0x70, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x70, 0xad, 0xc1, 0x32, 0x9c, 0xc1, 0x19, 0x74, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x70, 0xb1, 0x01, 0x33, 0xa0, 0x01, 0x1a, 0x78, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0xc0, 0xc4, 0x81, 0x92, 0x06, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x20, 0xc5, 0x41, 0x23, 0xa8, 0xc1, 0x68, 0x42, 0x00,
  0x54, 0x80, 0xc1, 0x70, 0x03, 0x11, 0x90, 0xc1, 0x2c, 0x43, 0x80, 0x06,
  0x41, 0x15, 0x6f, 0x00, 0xc3, 0x0d, 0x06, 0x31, 0x06, 0xc3, 0x0d, 0x42,
  0x31, 0x06, 0x25, 0x04, 0x3b, 0xcb, 0x50, 0x08, 0xc1, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x68, 0x75, 0xd0, 0x2d, 0x89, 0x1c, 0x8c, 0x26, 0x04,
  0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x68, 0x77, 0xf0, 0x35, 0x06,
  0x1d, 0x8c, 0x26, 0x04, 0xc0, 0x70, 0xc3, 0x10, 0x80, 0xc1, 0x2c, 0x03,
  0x31, 0x04, 0x25, 0x10, 0x3c, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x4c,
  0x1f, 0x88, 0x41, 0x30, 0xdc, 0x10, 0x94, 0x01, 0x18, 0x4c, 0x37, 0x88,
  0x81, 0x10, 0xcc, 0x12, 0x14, 0xd5, 0x48, 0x3c, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x4c, 0x28, 0x98, 0x41, 0x30, 0xdc, 0x10, 0xa4, 0x01, 0x18,
  0x94, 0x50, 0x06, 0x30, 0xdd, 0x50, 0x06, 0x81, 0x30, 0x4b, 0x50, 0x0c,
  0x74, 0x00, 0xcc, 0x20, 0x10, 0xb8, 0x10, 0x14, 0xd6, 0x06, 0x30, 0xdc,
  0x10, 0x5c, 0x63, 0x50, 0x54, 0xb0, 0xb3, 0x0c, 0x89, 0x11, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x81, 0x76, 0x0a, 0x6f, 0xd0, 0x6d, 0xa4, 0x30,
  0x9a, 0x10, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xa5, 0x42,
  0x1c, 0x7c, 0x85, 0x29, 0x8c, 0x26, 0x04, 0xc0, 0x70, 0xc3, 0x10, 0x80,
  0xc1, 0x2c, 0x03, 0x72, 0x04, 0x25, 0x10, 0x3c, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0xcc, 0x2b, 0xd0, 0x41, 0x30, 0xdc, 0x10, 0xdc, 0x01, 0x18,
  0x4c, 0x37, 0xd0, 0x81, 0x10, 0xcc, 0x12, 0x24, 0xc5, 0x90, 0x01, 0x8f,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0x33, 0x0b, 0x78, 0x10, 0x0c, 0x37,
  0x04, 0x7b, 0x00, 0x06, 0x25, 0xdc, 0x01, 0x4c, 0x37, 0xdc, 0x41, 0x20,
  0xcc, 0x12, 0x24, 0x03, 0x1d, 0x00, 0x73, 0x08, 0x08, 0x3f, 0x14, 0x36,
  0x05, 0x21, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x4a, 0x17, 0xe8,
  0x20, 0x00, 0x85, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa0, 0x76, 0x81,
  0x0e, 0x02, 0x5b, 0xa8, 0x36, 0x08, 0x62, 0xb8, 0x21, 0x60, 0x83, 0x31,
  0xa8, 0x34, 0x08, 0x76, 0x96, 0xa1, 0x51, 0x82, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0xd0, 0x78, 0x81, 0x14, 0xe4, 0x00, 0x0e, 0x72, 0x61, 0x34,
  0x21, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0xf3, 0x05, 0x53,
  0xa0, 0x83, 0x62, 0x17, 0x46, 0x13, 0x02, 0x60, 0xb8, 0x61, 0x08, 0xc0,
  0x60, 0x96, 0x81, 0x59, 0x82, 0x12, 0x08, 0x1e, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x03, 0x86, 0x1c, 0x52, 0x21, 0x18, 0x6e, 0x08, 0x58, 0x01, 0x0c,
  0xa6, 0x1b, 0x52, 0x41, 0x08, 0x66, 0x09, 0x9a, 0x62, 0xf2, 0x80, 0x47,
  0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0x41, 0x87, 0x56, 0x08, 0x86, 0x1b,
  0x02, 0x58, 0x00, 0x83, 0x12, 0x58, 0x01, 0xa6, 0x1b, 0x58, 0x21, 0x10,
  0x66, 0x09, 0x9a, 0x81, 0x0e, 0x80, 0x59, 0x04, 0xc6, 0x2c, 0x92, 0x59,
  0x02, 0x67, 0xa0, 0x02, 0xa0, 0x89, 0x66, 0x0d, 0x24, 0x0b, 0x28, 0x11,
  0x54, 0x10, 0x0a, 0x30, 0xdc, 0x10, 0x80, 0xc2, 0x18, 0x54, 0x1f, 0x04,
  0x3b, 0xcb, 0x20, 0x3d, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x68,
  0xf0, 0x80, 0x0b, 0xa6, 0x40, 0x0a, 0xed, 0x30, 0x9a, 0x10, 0x00, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xc9, 0x83, 0x2e, 0xa0, 0x42, 0xf1,
  0x0e, 0xa3, 0x09, 0x01, 0x30, 0xdc, 0x30, 0x04, 0x60, 0x30, 0xcb, 0x10,
  0x41, 0x41, 0x09, 0x04, 0x8f, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0x83,
  0x0f, 0xbd, 0x10, 0x0c, 0x37, 0x04, 0xe0, 0x00, 0x06, 0xd3, 0x0d, 0xbd,
  0x20, 0x04, 0xb3, 0x04, 0x52, 0x31, 0xad, 0xc0, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0xc0, 0xf0, 0x43, 0x38, 0x04, 0xc3, 0x0d, 0x01, 0x39, 0x80,
  0x41, 0x09, 0xe0, 0x00, 0xd3, 0x0d, 0xe0, 0x10, 0x08, 0xb3, 0x04, 0xd2,
  0x40, 0x07, 0xc0, 0x40, 0x42, 0xe4, 0x1a, 0xce, 0x70, 0x43, 0x50, 0x99,
  0x81, 0x55, 0xbf, 0x70, 0x82, 0x59, 0x06, 0x67, 0x12, 0x06, 0x1a, 0x00,
  0x36, 0x90, 0x86, 0x1b, 0x02, 0x90, 0x30, 0x83, 0x59, 0x06, 0x6a, 0x0b,
  0x66, 0x09, 0xaa, 0x81, 0x0a, 0xa0, 0xc8, 0x08, 0x6a, 0xa0, 0x02, 0x88,
  0x83, 0x4c, 0x44, 0xa8, 0x12, 0xc8, 0x81, 0x2c, 0x10, 0x40, 0x60, 0xc1,
  0x1b, 0x88, 0xa0, 0x02, 0x5e, 0x80, 0xe1, 0x86, 0x60, 0x17, 0xc6, 0xa0,
  0x70, 0x21, 0xd8, 0x59, 0x86, 0xcc, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0x40, 0x5b, 0x89, 0x79, 0x08, 0x87, 0x5f, 0x40, 0x89, 0xd1, 0x84,
  0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xad, 0x25, 0xea, 0x61,
  0x1c, 0x0a, 0x95, 0x18, 0x4d, 0x08, 0x80, 0xe1, 0x86, 0x21, 0x00, 0x83,
  0x59, 0x06, 0xec, 0x0a, 0x4a, 0x20, 0x78, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0x98, 0x99, 0xc0, 0x87, 0x60, 0xb8, 0x21, 0xd8, 0x07, 0x30, 0x98,
  0x6e, 0xc0, 0x07, 0x21, 0x98, 0x25, 0xc8, 0x8a, 0x41, 0x07, 0x1e, 0x31,
  0x30, 0x00, 0x10, 0x04, 0x03, 0xe6, 0x26, 0xf8, 0x21, 0x18, 0x6e, 0x08,
  0xfe, 0x01, 0x0c, 0x4a, 0xd8, 0x07, 0x98, 0x6e, 0xd8, 0x87, 0x40, 0x98,
  0x25, 0xc8, 0x06, 0x3a, 0x00, 0xe6, 0x12, 0x30, 0x12, 0xa9, 0x86, 0x1b,
  0x02, 0x38, 0x30, 0x83, 0xe9, 0x06, 0x0b, 0x27, 0x02, 0x0b, 0x30, 0x10,
  0x0c, 0x37, 0x68, 0x39, 0x61, 0x06, 0xb3, 0x0c, 0x95, 0x16, 0x0c, 0x34,
  0x00, 0x44, 0x36, 0x4b, 0xb0, 0x0d, 0x54, 0x00, 0x78, 0x32, 0x09, 0x9a,
  0x05, 0xa8, 0x20, 0x82, 0x0a, 0xea, 0x01, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0x80, 0x2a, 0x8b, 0x7e, 0xb0, 0x87, 0x60, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0x28, 0xb3, 0xe8, 0x87, 0x7b, 0x10, 0x86, 0x1b, 0x04, 0x7b,
  0x18, 0x83, 0xe1, 0x06, 0xe1, 0x1e, 0xc6, 0xa0, 0x84, 0x60, 0x67, 0x19,
  0x3e, 0x2e, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xed, 0x2c, 0x5e,
  0xa2, 0x1f, 0x0a, 0xb2, 0x18, 0x4d, 0x08, 0x80, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0xd0, 0xd2, 0x22, 0x26, 0xfe, 0xc1, 0x30, 0x8b, 0xd1, 0x84,
  0x00, 0x18, 0x6e, 0x18, 0x02, 0x30, 0x98, 0x65, 0xf0, 0xba, 0xa0, 0x04,
  0x82, 0x47, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0x79, 0x0b, 0x9a, 0x08,
  0x86, 0x1b, 0x82, 0x9b, 0x00, 0x83, 0xe9, 0x06, 0x9a, 0x10, 0x82, 0x59,
  0x82, 0xaf, 0x1a, 0x87, 0x47, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0x99,
  0x0b, 0x9c, 0x08, 0x86, 0x1b, 0x82, 0x9d, 0x00, 0x83, 0x12, 0x6e, 0x02,
  0xa6, 0x1b, 0x6e, 0x22, 0x10, 0x66, 0x09, 0xbe, 0x81, 0x0e, 0x80, 0xe9,
  0x04, 0x8f, 0x4f, 0xb6, 0x9a, 0xa8, 0x98, 0x25, 0x00, 0x83, 0x81, 0x0a,
  0x40, 0x0d, 0xbe, 0x3c, 0x30, 0x83, 0x81, 0x0a, 0x80, 0xf8, 0x0a, 0x33,
  0xb0, 0xe0, 0x2e, 0x40, 0x50, 0x01, 0x5e, 0xa4, 0x05, 0x04, 0x08, 0x86,
  0x1b, 0x82, 0x8c, 0x0c, 0x66, 0x19, 0xc2, 0xc0, 0x0c, 0x82, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0x90, 0x42, 0xa3, 0x27, 0x64, 0x42, 0x2f, 0x46,
  0x13, 0x02, 0x60, 0xb8, 0xa1, 0x0b, 0xc6, 0x60, 0xb8, 0xa1, 0x10, 0xc6,
  0xa0, 0x84, 0x60, 0x67, 0x19, 0xca, 0x40, 0x0c, 0x82, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0xd0, 0x44, 0x43, 0x2d, 0x70, 0x02, 0x0c, 0xfe, 0x62,
  0x34, 0x21, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x23, 0x0d,
  0xb6, 0xd0, 0x89, 0x24, 0x34, 0x46, 0x13, 0x02, 0x60, 0xb8, 0x61, 0x08,
  0xc0, 0x60, 0x96, 0x81, 0x0c, 0xc6, 0x20, 0x28, 0x81, 0xe0, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0x60, 0x54, 0xe3, 0x2d, 0x82, 0xe1, 0x86, 0x40,
  0x2e, 0xc0, 0x60, 0xba, 0xe1, 0x2d, 0x84, 0x60, 0x96, 0xa0, 0x0c, 0x0a,
  0x4a, 0x03, 0x1e, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0xc6, 0x35, 0xe6,
  0x22, 0x18, 0x6e, 0x08, 0xec, 0x02, 0x0c, 0x4a, 0x90, 0x0b, 0x98, 0x6e,
  0x90, 0x8b, 0x40, 0x98, 0x25, 0x28, 0x83, 0x81, 0x0e, 0x80, 0x19, 0x03,
  0x81, 0x0c, 0xe4, 0x25, 0x0c, 0x86, 0x1b, 0x02, 0xce, 0x0c, 0xa6, 0x1b,
  0xae, 0x2d, 0x98, 0x25, 0x30, 0x83, 0x81, 0x0a, 0x00, 0x0f, 0xc0, 0x40,
  0x28, 0x83, 0xe1, 0x06, 0x4d, 0x36, 0xcc, 0x60, 0x96, 0x01, 0x0c, 0xce,
  0x20, 0x18, 0x68, 0x00, 0x08, 0x33, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x03, 0x49, 0x37, 0xec, 0x62, 0x2d, 0x66, 0x63, 0x34, 0x21, 0x00, 0x2a,
  0x08, 0x0d, 0x18, 0x6e, 0x20, 0xee, 0x00, 0x0c, 0xa6, 0x1b, 0x84, 0xdb,
  0x08, 0x2a, 0x30, 0xa0, 0x0e, 0xdd, 0x80, 0xe1, 0x86, 0x40, 0x0f, 0xc0,
  0x60, 0xba, 0xc1, 0xd8, 0x8d, 0xa0, 0x86, 0x00, 0x46, 0x0c, 0x1a, 0x00,
  0x04, 0xc1, 0x80, 0xfb, 0x0d, 0xd1, 0xb8, 0x0b, 0xba, 0xc8, 0x8d, 0xc2,
  0x34, 0x4c, 0xc3, 0x34, 0xf2, 0x62, 0xc4, 0xa0, 0x01, 0x40, 0x10, 0x0c,
  0xb8, 0xdf, 0x10, 0x8d, 0xbb, 0xa0, 0x0b, 0xdb, 0x08, 0x4c, 0xc3, 0x34,
  0x4c, 0x23, 0x2f, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x80, 0xfb, 0x0d,
  0xd1, 0xb8, 0x8b, 0xa2, 0x37, 0xe8, 0xc2, 0x34, 0x4c, 0xc3, 0x34, 0xf2,
  0x62, 0xc4, 0xa0, 0x01, 0x40, 0x10, 0x0c, 0xb8, 0xdf, 0x10, 0x8d, 0xbb,
  0x08, 0x7a, 0x83, 0x2e, 0x4c, 0xc3, 0x34, 0x4c, 0x23, 0x2f, 0x66, 0x09,
  0xd0, 0x00, 0xc3, 0x81, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00,
  0xa6, 0x1b, 0xc0, 0x7c, 0x48, 0x24, 0x4d, 0x01, 0x32, 0x85, 0x08, 0x8e,
  0xdb, 0x60, 0x00, 0xf3, 0x21, 0x91, 0x34, 0x05, 0xc8, 0x14, 0x22, 0x78,
  0x6e, 0x6f, 0xcc, 0x87, 0x44, 0xd2, 0x14, 0x20, 0x53, 0x88, 0xe0, 0xba,
  0x69, 0x31, 0x1f, 0x12, 0x49, 0x53, 0x80, 0x4c, 0x21, 0x82, 0xef, 0x86,
  0xc4, 0x7c, 0x48, 0x24, 0x4d, 0x01, 0x32, 0x85, 0x08, 0xce, 0x9b, 0x4c,
  0x77, 0x20, 0x44, 0x04, 0x44, 0xc2, 0x81, 0x6d, 0x54, 0x51, 0x10, 0xd1,
  0xef, 0x6a, 0xef, 0x2f, 0x4d, 0x11, 0x25, 0x4c, 0x01, 0x55, 0x58, 0x63,
  0x40, 0xb3, 0x10, 0x8d, 0x31, 0x1d, 0x3e, 0xe2, 0x23, 0x3e, 0xbd, 0x5b,
  0x70, 0x80, 0x22, 0x4d, 0xc4, 0xe3, 0x23, 0x3e, 0xe2, 0xd3, 0xa4, 0x84,
  0x35, 0x08, 0xf8, 0x39, 0x2a, 0xa3, 0x63, 0x7a, 0x73, 0x3b, 0x2b, 0x9b,
  0xa3, 0x1b, 0x7a, 0x6b, 0x6b, 0x7b, 0x73, 0x83, 0x92, 0x2b, 0x33, 0x4b,
  0xc3, 0x03, 0x02, 0xca, 0x0a, 0x42, 0x4a, 0x4a, 0x02, 0xd2, 0x72, 0x29,
  0xc3, 0x4b, 0xa3, 0x9b, 0x71, 0x49, 0x73, 0x49, 0xb3, 0xeb, 0x80, 0xe7,
  0x43, 0x22, 0x69, 0x0a, 0x90, 0x29, 0x44, 0xf0, 0xdb, 0x77, 0x1e, 0x52,
  0xc3, 0x1a, 0x04, 0xfc, 0x1c, 0x95, 0xd1, 0x31, 0xbd, 0xb9, 0x9d, 0x95,
  0xcd, 0xd1, 0x0d, 0xbd, 0xb5, 0xb5, 0xbd, 0xb9, 0x41, 0xc9, 0x95, 0x99,
  0xa5, 0xe1, 0x01, 0x01, 0x65, 0x05, 0x21, 0x25, 0x25, 0x01, 0x69, 0xb9,
  0x94, 0xe1, 0xa5, 0xd1, 0xd9, 0xb8, 0xa4, 0xb9, 0xa4, 0x99, 0xd7, 0xe0,
  0xd3, 0xb5, 0x71, 0x3d, 0x1f, 0x12, 0x49, 0x53, 0x80, 0x4c, 0x21, 0x82,
  0xef, 0xbe, 0xf3, 0xd8, 0xdc, 0xe0, 0xd3, 0xb6, 0x1d, 0x06, 0x0c, 0x3e,
  0x8d, 0x93, 0x24, 0xd6, 0x20, 0xe0, 0xe7, 0xa8, 0x8c, 0x8e, 0xe9, 0xcd,
  0xed, 0xac, 0x6c, 0x8e, 0x6e, 0xe8, 0xad, 0xad, 0xed, 0xcd, 0x0d, 0x4a,
  0xae, 0xcc, 0x2c, 0x0d, 0x0f, 0x08, 0x28, 0x2b, 0x08, 0x29, 0x29, 0x09,
  0x48, 0xcb, 0xa5, 0x0c, 0x2f, 0x8d, 0x2e, 0xc7, 0x25, 0xcd, 0x25, 0xcd,
  0xe8, 0x1e, 0x06, 0xb8, 0x4a, 0xa2, 0x31, 0xa6, 0xc3, 0x47, 0x7c, 0xc4,
  0xa7, 0xaf, 0xc2, 0xf0, 0x97, 0xc8, 0x7f, 0x0e, 0x13, 0x0d, 0x18, 0x7c,
  0x3a, 0x37, 0xdf, 0x80, 0xc1, 0xa7, 0x75, 0x23, 0x52, 0x3e, 0x24, 0x92,
  0xa6, 0x00, 0x99, 0x42, 0xc4, 0x66, 0x32, 0xc6, 0x89, 0x26, 0xa7, 0xe1,
  0x9c, 0x81, 0x90, 0x7e, 0x57, 0x7b, 0x7f, 0x69, 0x8a, 0x28, 0x61, 0x0a,
  0xa8, 0x82, 0xf4, 0xc1, 0x06, 0x01, 0x3f, 0x47, 0x65, 0x74, 0x4c, 0x6f,
  0x6e, 0x67, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50,
  0x72, 0x65, 0x66, 0x69, 0x78, 0x40, 0x40, 0x59, 0x41, 0x48, 0x49, 0x49,
  0x40, 0x5a, 0x2e, 0x65, 0x78, 0x69, 0x74, 0x2e, 0x69, 0x2e, 0x35, 0x2e,
  0x69, 0x96, 0x1d, 0x30, 0xf8, 0xf4, 0x6d, 0x34, 0x63, 0xc0, 0x39, 0x8d,
  0x34, 0x45, 0x94, 0x30, 0x85, 0x08, 0x11, 0x01, 0x91, 0x70, 0x60, 0x9c,
  0xd3, 0x48, 0x13, 0xd0, 0x4c, 0xd2, 0x2f, 0x04, 0x54, 0x51, 0x10, 0x91,
  0x31, 0x09, 0x3e, 0x4d, 0xd2, 0xc8, 0x83, 0x80, 0x1f, 0xa2, 0x32, 0xba,
  0x32, 0xb9, 0xb6, 0x34, 0xb7, 0x32, 0xa9, 0x30, 0xb7, 0xb3, 0x32, 0x20,
  0xa0, 0xac, 0xa0, 0x9f, 0x20, 0xab, 0x1f, 0x12, 0xbb, 0xb2, 0x31, 0xba,
  0x37, 0x39, 0xa0, 0x24, 0x12, 0x98, 0x18, 0x20, 0xa0, 0x24, 0x20, 0x2d,
  0x97, 0x32, 0xbc, 0x34, 0x3a, 0x97, 0x34, 0x17, 0xb6, 0xb7, 0x37, 0xb8,
  0x32, 0xbc, 0x34, 0x3a, 0x0b, 0x23, 0x44, 0x13, 0x69, 0x0c, 0x8c, 0x10,
  0x4d, 0xe0, 0xb2, 0xb8, 0xe7, 0x43, 0x22, 0x69, 0x0a, 0x90, 0x29, 0x44,
  0x70, 0xdd, 0x77, 0x9e, 0xa3, 0x80, 0xfc, 0x25, 0xf2, 0x9f, 0xc3, 0x7f,
  0x22, 0xe2, 0x20, 0x80, 0x81, 0x88, 0x8c, 0x3c, 0xe0, 0x11, 0x0e, 0x64,
  0x19, 0x34, 0xb1, 0x19, 0x88, 0xcb, 0x47, 0x7c, 0x9a, 0x54, 0xa0, 0x06,
  0x01, 0x3f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74,
  0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
  0x40, 0x40, 0x59, 0x41, 0x48, 0x49, 0x49, 0x40, 0x5a, 0x2e, 0x65, 0x78,
  0x69, 0x74, 0x2e, 0x69, 0x2e, 0x69, 0xe6, 0x18, 0x80, 0x4c, 0x3e, 0xe2,
  0x23, 0x3e, 0xcd, 0xdb, 0x6a, 0x00, 0xe1, 0x9a, 0x48, 0x43, 0x3a, 0xd9,
  0x02, 0x7e, 0x8c, 0xd2, 0xdc, 0xc8, 0xa6, 0xe0, 0xd8, 0xd2, 0xe8, 0x80,
  0x80, 0xb2, 0x82, 0x90, 0x90, 0x92, 0x80, 0xb4, 0x5c, 0xca, 0xf0, 0xd2,
  0xe8, 0x5c, 0xd2, 0x8c, 0x35, 0x80, 0x70, 0x4d, 0xe0, 0xb2, 0xed, 0x00,
  0xc6, 0x97, 0x9e, 0x05, 0x99, 0x7c, 0xc4, 0x47, 0x7c, 0xda, 0x0a, 0x03,
  0x9e, 0x0f, 0x89, 0xa4, 0x29, 0x40, 0xa6, 0x10, 0xc1, 0x73, 0xdf, 0x79,
  0x0c, 0x35, 0x40, 0x5a, 0x88, 0xc6, 0x98, 0x0e, 0x1f, 0xf1, 0x11, 0x9f,
  0xf6, 0x17, 0x41, 0x92, 0x00, 0x53, 0x0c, 0xa8, 0x18, 0xe0, 0x2a, 0x89,
  0xc6, 0x98, 0x0e, 0x1f, 0xf1, 0x11, 0x9f, 0xf6, 0x17, 0x41, 0x92, 0x00,
  0x03, 0x0e, 0x58, 0xa4, 0x67, 0x41, 0x26, 0x1f, 0xf1, 0x11, 0x9f, 0x36,
  0xee, 0x80, 0x45, 0x7a, 0x16, 0x64, 0xf2, 0x11, 0x1f, 0xf1, 0x6b, 0x63,
  0x0c, 0x58, 0x26, 0x1f, 0xf1, 0x11, 0x9f, 0xe6, 0x7d, 0xa4, 0x31, 0xef,
  0x80, 0x48, 0x7a, 0x16, 0x64, 0xf2, 0x11, 0x1f, 0xf1, 0x6b, 0x7f, 0x11,
  0x24, 0x09, 0x20, 0x6d, 0xc0, 0x41, 0xc0, 0x0f, 0x51, 0x19, 0x5d, 0x99,
  0x5c, 0x5b, 0x9a, 0x5b, 0x99, 0x54, 0x98, 0xdb, 0x59, 0x19, 0x10, 0x50,
  0x56, 0xd0, 0x4f, 0x90, 0xd5, 0x0f, 0x89, 0x5d, 0xd9, 0x18, 0xdd, 0x9b,
  0x1c, 0x50, 0x12, 0x09, 0x4c, 0x0c, 0x10, 0x50, 0x12, 0x90, 0x96, 0x4b,
  0x19, 0x5e, 0x1a, 0x9d, 0x4b, 0x9a, 0x59, 0x31, 0x1f, 0x12, 0x49, 0x53,
  0x80, 0x4c, 0x21, 0x72, 0xeb, 0xb6, 0xc6, 0x7c, 0x48, 0x24, 0x4d, 0x01,
  0x32, 0x85, 0xc8, 0xbd, 0xdb, 0x1f, 0xf3, 0x21, 0x91, 0x34, 0x05, 0xc8,
  0x14, 0x22, 0x37, 0x6f, 0x9a, 0x01, 0xcc, 0x87, 0x44, 0xd2, 0x14, 0x20,
  0x53, 0x88, 0xdc, 0xbd, 0x81, 0x06, 0x3c, 0x1f, 0x12, 0x49, 0x53, 0x80,
  0x4c, 0x21, 0x82, 0xd3, 0xbe, 0xf3, 0x18, 0x6f, 0xc0, 0xf3, 0x21, 0x91,
  0x34, 0x05, 0xc8, 0x14, 0x22, 0x38, 0xee, 0x3b, 0x0f, 0xa9, 0xa4, 0x0d,
  0x02, 0x7e, 0x8e, 0xca, 0xe8, 0x98, 0xde, 0xdc, 0xce, 0xca, 0xe6, 0xe8,
  0x86, 0xde, 0xda, 0xda, 0xde, 0xdc, 0xa0, 0xe4, 0xca, 0xcc, 0xd2, 0xf0,
  0x80, 0x80, 0xb2, 0x82, 0x90, 0x92, 0x92, 0x80, 0xb4, 0x5c, 0xca, 0xf0,
  0xd2, 0xe8, 0x66, 0x5c, 0xd2, 0x5c, 0x6c, 0x5c, 0xd2, 0x4c, 0xe9, 0xf9,
  0x90, 0x48, 0x9a, 0x02, 0x64, 0x0a, 0x11, 0x9c, 0xf7, 0x9d, 0xc7, 0x4a,
  0x03, 0x1c, 0x7f, 0x21, 0x1a, 0x63, 0x3a, 0x7c, 0xc4, 0x47, 0x7c, 0x7a,
  0xb7, 0xd3, 0x00, 0xca, 0x5f, 0x88, 0xc6, 0x98, 0x0e, 0x1f, 0xf1, 0x11,
  0x9f, 0xde, 0xfd, 0x45, 0x90, 0x24, 0x80, 0x94, 0xc1, 0x06, 0x01, 0x3f,
  0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x43, 0x6f,
  0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x40, 0x40,
  0x59, 0x41, 0x48, 0x49, 0x49, 0x40, 0x5a, 0x2e, 0x65, 0x78, 0x69, 0x74,
  0x31, 0x32, 0x2e, 0x69, 0x2e, 0x69, 0xe6, 0x19, 0xc0, 0x7c, 0x48, 0x24,
  0x4d, 0x01, 0x32, 0x85, 0x08, 0x4e, 0x9b, 0x6d, 0x00, 0xf3, 0x21, 0x91,
  0x34, 0x05, 0xc8, 0x14, 0x22, 0x78, 0x6d, 0xd1, 0x01, 0xcc, 0x87, 0x44,
  0xd2, 0x14, 0x20, 0x53, 0x88, 0xe0, 0xb6, 0x55, 0x07, 0x30, 0x1f, 0x12,
  0x49, 0x53, 0x80, 0x4c, 0x21, 0x82, 0xdf, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
